{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMZriIdkQ+lh6g0fbibqYqA"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **Introdução ao Conceito de Árvore de Decisão**\n","\n","Uma árvore de decisão é uma estrutura de modelagem não linear, que simula o processo de decisão com base em respostas a perguntas realizadas sequencialmente aos dados. Cada resposta é interpretada como um nó de divisão no algoritmo, e geometricamente representa uma divisão ortogonal a $n-1$ eixos das variáveis de saída.\n","\n","Exemplo de uma estrutura de árvore de decisão:\n","\n","<img src=\"https://i1.wp.com/www.vooo.pro/insights/wp-content/uploads/2016/12/RDS-Vooo_insights-Tutorial_arvore_de_decisao_02.jpg?resize=640%2C371&ssl=1\" width=600>\n","\n","A próxima imagem apresenta de forma ilustrativa o que acontece com o espaço de atributos.\n","\n","<img src=https://paulvanderlaken.files.wordpress.com/2020/03/readme-titanic_plot-11.png width=500>\n","\n","## **Processo de Aprendizado da Árvore de Decisão**\n","\n","A primeira pergunta que uma árvore precisa responder é: *qual o atributo receberá a divisão?*\n","\n","Dependendo do atributo que for utilizado no nó raiz, a árvore pode atingir um determinado grau de separação dos conjuntos de cada classe. Então deve existir uma métrica que direciona a separação para um determinado atributo.\n","\n","<img src=\"https://i2.wp.com/www.vooo.pro/insights/wp-content/uploads/2016/12/RDS-Vooo-Tutorial_completo_arvore_decisao_03.jpg?resize=617%2C293&ssl=1\" width=500>\n","\n"],"metadata":{"id":"-KxmTYsE0mZn"}},{"cell_type":"markdown","source":["### *Critério de Gini*\n","\n","A impureza de Gini mede o quaõ \"impuras\" são as folhas de uma árvore contruídas após as divisões do nó. É calculada como:\n","\n","$$Gini(D) = 1- \\sum_{i=1}^{n}p_i$$\n","\n","Essencialmente, a árvode de decisão compara a impureza de Gini antes e depois da realização das divisões em cada atributo, e seleciona aquele atributo que vai proporcionar a **maior purificação** da amostra.\n","\n","### *Critério de Entropia*\n","\n","A entropia é uma quantidade definida em física, engenharia e teoria da informação, com o objetivo de quantificar o **grau de desordem** de um sistema ou, de forma equivalente, o quanto se possui de informação a respeito de um sistema. É calculada como:\n","\n","$$E = -\\sum_{i=1}^{n}p_i \\log_2{p_i}$$\n","\n","De mesma forma, a árvore de decisão procura aquele atributo que proporciona a maior queda de entropia, que representa o maior ganho de informação."],"metadata":{"id":"LH4Ssg0d3Osv"}},{"cell_type":"code","source":["import warnings\n","import numpy as np\n","import pandas as pd\n","from google.colab import drive\n","import matplotlib.pyplot as plt\n","from sklearn.pipeline import Pipeline\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.metrics import classification_report, confusion_matrix, make_scorer\n","from sklearn.model_selection import train_test_split, GridSearchCV, StratifiedKFold\n","\n","# ignorar warnings\n","warnings.filterwarnings('ignore')"],"metadata":{"id":"sQvy_5MT5oKg","executionInfo":{"status":"ok","timestamp":1698107855022,"user_tz":180,"elapsed":262,"user":{"displayName":"Ícaro Augusto Maccari Zelioli","userId":"02607314494482909449"}}},"execution_count":43,"outputs":[]},{"cell_type":"code","source":["# montando drive\n","drive.mount('/content/drive/')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c0XD6Hao6IlS","executionInfo":{"status":"ok","timestamp":1698104811540,"user_tz":180,"elapsed":29501,"user":{"displayName":"Ícaro Augusto Maccari Zelioli","userId":"02607314494482909449"}},"outputId":"e35e82c4-50e1-4943-e513-ebdbbfca8a28"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive/\n"]}]},{"cell_type":"code","source":["# procurando arquivos no Drive\n","data = pd.read_csv('/content/drive/MyDrive/Bootcamp_DataScience/Algoritmos de Inteligência Artificial para Classificação/datasets/german_credit.csv')\n","data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":325},"id":"-LlJPnVl7xqI","executionInfo":{"status":"ok","timestamp":1698104814621,"user_tz":180,"elapsed":1047,"user":{"displayName":"Ícaro Augusto Maccari Zelioli","userId":"02607314494482909449"}},"outputId":"f6b966df-1817-4e10-e903-60c41e91e06d"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Creditability  Account Balance  Duration of Credit (month)  \\\n","0              1                1                          18   \n","1              1                1                           9   \n","2              1                2                          12   \n","3              1                1                          12   \n","4              1                1                          12   \n","\n","   Payment Status of Previous Credit  Purpose  Credit Amount  \\\n","0                                  4        2           1049   \n","1                                  4        0           2799   \n","2                                  2        9            841   \n","3                                  4        0           2122   \n","4                                  4        0           2171   \n","\n","   Value Savings/Stocks  Length of current employment  Instalment per cent  \\\n","0                     1                             2                    4   \n","1                     1                             3                    2   \n","2                     2                             4                    2   \n","3                     1                             3                    3   \n","4                     1                             3                    4   \n","\n","   Sex & Marital Status  ...  Duration in Current address  \\\n","0                     2  ...                            4   \n","1                     3  ...                            2   \n","2                     2  ...                            4   \n","3                     3  ...                            2   \n","4                     3  ...                            4   \n","\n","   Most valuable available asset  Age (years)  Concurrent Credits  \\\n","0                              2           21                   3   \n","1                              1           36                   3   \n","2                              1           23                   3   \n","3                              1           39                   3   \n","4                              2           38                   1   \n","\n","   Type of apartment  No of Credits at this Bank  Occupation  \\\n","0                  1                           1           3   \n","1                  1                           2           3   \n","2                  1                           1           2   \n","3                  1                           2           2   \n","4                  2                           2           2   \n","\n","   No of dependents  Telephone  Foreign Worker  \n","0                 1          1               1  \n","1                 2          1               1  \n","2                 1          1               1  \n","3                 2          1               2  \n","4                 1          1               2  \n","\n","[5 rows x 21 columns]"],"text/html":["\n","  <div id=\"df-2b354b80-c4cb-42a6-b686-956924b39804\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Creditability</th>\n","      <th>Account Balance</th>\n","      <th>Duration of Credit (month)</th>\n","      <th>Payment Status of Previous Credit</th>\n","      <th>Purpose</th>\n","      <th>Credit Amount</th>\n","      <th>Value Savings/Stocks</th>\n","      <th>Length of current employment</th>\n","      <th>Instalment per cent</th>\n","      <th>Sex &amp; Marital Status</th>\n","      <th>...</th>\n","      <th>Duration in Current address</th>\n","      <th>Most valuable available asset</th>\n","      <th>Age (years)</th>\n","      <th>Concurrent Credits</th>\n","      <th>Type of apartment</th>\n","      <th>No of Credits at this Bank</th>\n","      <th>Occupation</th>\n","      <th>No of dependents</th>\n","      <th>Telephone</th>\n","      <th>Foreign Worker</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>18</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>1049</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>21</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>9</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>2799</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>36</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>12</td>\n","      <td>2</td>\n","      <td>9</td>\n","      <td>841</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>23</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>12</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>2122</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>39</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>12</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>2171</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>38</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 21 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2b354b80-c4cb-42a6-b686-956924b39804')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2b354b80-c4cb-42a6-b686-956924b39804 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2b354b80-c4cb-42a6-b686-956924b39804');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-44cc3e03-664a-43a9-adba-0727e22625dd\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-44cc3e03-664a-43a9-adba-0727e22625dd')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-44cc3e03-664a-43a9-adba-0727e22625dd button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["# modificando os nomes das colunas\n","data.columns = data.columns.str.lower().str.replace(' ', '_')"],"metadata":{"id":"x3v6Y_Nv7yWC","executionInfo":{"status":"ok","timestamp":1698104822899,"user_tz":180,"elapsed":264,"user":{"displayName":"Ícaro Augusto Maccari Zelioli","userId":"02607314494482909449"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["# separando x e y - vamos usar todos as colunas\n","x = data.drop(['creditability'], axis=1)\n","y = data[['creditability']]"],"metadata":{"id":"84CPeM3x70ji","executionInfo":{"status":"ok","timestamp":1698104831107,"user_tz":180,"elapsed":7,"user":{"displayName":"Ícaro Augusto Maccari Zelioli","userId":"02607314494482909449"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["# separando treino e teste - com estratificação\n","x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, stratify=y)"],"metadata":{"id":"ON6nTO7z72gh","executionInfo":{"status":"ok","timestamp":1698104843905,"user_tz":180,"elapsed":291,"user":{"displayName":"Ícaro Augusto Maccari Zelioli","userId":"02607314494482909449"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["# treinando nossa primeira árvore de decisão - não precisa escalonamento\n","dt = DecisionTreeClassifier().fit(x_train, y_train)\n","\n","# realizando novas previsões\n","yhat_train = dt.predict(x_train)\n","yhat_test = dt.predict(x_test)"],"metadata":{"id":"-oYCy-zb75pp","executionInfo":{"status":"ok","timestamp":1698105033633,"user_tz":180,"elapsed":252,"user":{"displayName":"Ícaro Augusto Maccari Zelioli","userId":"02607314494482909449"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["# análise do desempenho\n","print('Desempenho - Base de Treino')\n","print(classification_report(y_train, yhat_train))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yWJmlEIs8n_L","executionInfo":{"status":"ok","timestamp":1698105108639,"user_tz":180,"elapsed":404,"user":{"displayName":"Ícaro Augusto Maccari Zelioli","userId":"02607314494482909449"}},"outputId":"9864c596-4585-4bb2-d842-94b9439bc916"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["Desempenho - Base de Treino\n","              precision    recall  f1-score   support\n","\n","           0       1.00      1.00      1.00       210\n","           1       1.00      1.00      1.00       490\n","\n","    accuracy                           1.00       700\n","   macro avg       1.00      1.00      1.00       700\n","weighted avg       1.00      1.00      1.00       700\n","\n"]}]},{"cell_type":"code","source":["# análise do desempenho\n","print('Desempenho - Base de Teste')\n","print(classification_report(y_test, yhat_test))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gDxgjsQb81Mw","executionInfo":{"status":"ok","timestamp":1698105114935,"user_tz":180,"elapsed":8,"user":{"displayName":"Ícaro Augusto Maccari Zelioli","userId":"02607314494482909449"}},"outputId":"3db626bd-434b-4efe-954b-2441b19782b1"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Desempenho - Base de Teste\n","              precision    recall  f1-score   support\n","\n","           0       0.50      0.61      0.55        90\n","           1       0.82      0.74      0.78       210\n","\n","    accuracy                           0.70       300\n","   macro avg       0.66      0.67      0.66       300\n","weighted avg       0.72      0.70      0.71       300\n","\n"]}]},{"cell_type":"markdown","source":["Claramente houve um *overfitting* desse modelo. Ele foi capaz de modelar até os ruídos e variabilidades aleatórias do conjunto de dados, mas não foi capaz de reproduzir essas correlações no conjunto de teste.\n","\n","Inevitavelmente, se fizermos perguntas o suficiente, vamos conseguir modelar qualquer sistema. No entanto, isso vai tornar o modelo tão complexo e específico, que dificilmente os padrões aprendidos serão reproduzidos em outros conjuntos de dados."],"metadata":{"id":"ZXS6M0pp9j-8"}},{"cell_type":"code","source":["# Analisando as dimensões da árvore criada\n","print(f'Profundidade da árvore: {dt.get_depth()}')\n","print(f'Número de folhas da árvore: {dt.get_n_leaves()}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rsn1ygRT-Q-m","executionInfo":{"status":"ok","timestamp":1698105535490,"user_tz":180,"elapsed":249,"user":{"displayName":"Ícaro Augusto Maccari Zelioli","userId":"02607314494482909449"}},"outputId":"06da2a5c-cb4a-4662-b5de-e329001c79ff"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Profundidade da árvore: 19\n","Número de folhas da árvore: 140\n"]}]},{"cell_type":"markdown","source":["Temos um modelo extremamente profundo e complexo. Isso não somente dificulta a capacidade de generalização dos dados, mas também a explicação dos resultados do modelo para pessoas não técnicas.\n","\n","Precisamos de uma forma de diminuir a profundidade da árvore, mas a questão é: qual a melhor profundidade?\n","\n","Esse é um típico problema de **determinação (tuning) de hiperparâmetros**."],"metadata":{"id":"htbAhx9t-l_Y"}},{"cell_type":"markdown","source":["## **Determinação de Hiperparâmetros por Validação Cruzada**\n","\n","Um dos desafios de se determinar os valores corretos de hiperparâmetros é que tais valores podem ser dependentes também dos dados que estamos submetendo o modelo. Não necessariamente um conjunto de hiperparâmetros que realizem uma boa previsão num conjunto de dados terá um bom desempenho em outro conjunto de dados.\n","\n","Assim precisamos buscar um conjunto de hiperparâmetros que apresentem um bom desempenho *médio*, ou seja, que apresentem desempenhos adequados em diversas bases de dados distintas.\n","\n","Para isso, podemos usar o conceito de **validação cruzada em $k$ folhas**. Veja um exemplo abaixo:\n","\n","<img src=\"https://miro.medium.com/v2/resize:fit:720/format:webp/1*AAwIlHM8TpAVe4l2FihNUQ.png\">\n","\n","Na validação cruzada de $k$ folhas, o modelo é treinado $k$ vezes, sendo que em cada vez, uma fração de $1/k$ do conjunto de dados é utilizado como base de teste, enquanto as outras $(k-1)/k$ porções são utilizadas como base de treinamento.\n","\n","Ao final do treinamento, escolhemos aquele conjunto de dados que resultam no melhor desempenho médio."],"metadata":{"id":"dlpgTr-i_3HG"}},{"cell_type":"code","source":["# criando um pipeline de modelagem\n","pipe = Pipeline([\n","    ('dt', DecisionTreeClassifier(random_state=2))\n","])\n","\n","# configurando um espaço de busca\n","params_grid = {\n","    'dt__criterion': ['gini', 'entropy'],\n","    'dt__max_depth': range(2, 11)\n","}\n","\n","# configurando um amostrador de k folhas de forma estratificada\n","splitter = StratifiedKFold(n_splits=10, shuffle=True, random_state=2)\n","\n","# configurando um buscador de hiperparâmetros\n","grid_search = GridSearchCV(\n","    estimator=pipe,\n","    param_grid=params_grid,\n","    scoring='precision_weighted',\n","    cv=splitter,\n","    refit=True,\n","    error_score=0,\n","    verbose=10\n",")"],"metadata":{"id":"_m_t8wQ9C9QX","executionInfo":{"status":"ok","timestamp":1698107713864,"user_tz":180,"elapsed":238,"user":{"displayName":"Ícaro Augusto Maccari Zelioli","userId":"02607314494482909449"}}},"execution_count":36,"outputs":[]},{"cell_type":"code","source":["# realizando busca\n","grid_search.fit(x_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"VA8qZZWqEQP5","executionInfo":{"status":"ok","timestamp":1698107720929,"user_tz":180,"elapsed":4543,"user":{"displayName":"Ícaro Augusto Maccari Zelioli","userId":"02607314494482909449"}},"outputId":"13a0646a-ae83-4d3b-dc08-6a453b21eac9"},"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["Fitting 10 folds for each of 18 candidates, totalling 180 fits\n","[CV 1/10; 1/18] START dt__criterion=gini, dt__max_depth=2.......................\n","[CV 1/10; 1/18] END dt__criterion=gini, dt__max_depth=2;, score=0.709 total time=   0.0s\n","[CV 2/10; 1/18] START dt__criterion=gini, dt__max_depth=2.......................\n","[CV 2/10; 1/18] END dt__criterion=gini, dt__max_depth=2;, score=0.709 total time=   0.0s\n","[CV 3/10; 1/18] START dt__criterion=gini, dt__max_depth=2.......................\n","[CV 3/10; 1/18] END dt__criterion=gini, dt__max_depth=2;, score=0.686 total time=   0.0s\n","[CV 4/10; 1/18] START dt__criterion=gini, dt__max_depth=2.......................\n","[CV 4/10; 1/18] END dt__criterion=gini, dt__max_depth=2;, score=0.658 total time=   0.0s\n","[CV 5/10; 1/18] START dt__criterion=gini, dt__max_depth=2.......................\n","[CV 5/10; 1/18] END dt__criterion=gini, dt__max_depth=2;, score=0.753 total time=   0.0s\n","[CV 6/10; 1/18] START dt__criterion=gini, dt__max_depth=2.......................\n","[CV 6/10; 1/18] END dt__criterion=gini, dt__max_depth=2;, score=0.745 total time=   0.0s\n","[CV 7/10; 1/18] START dt__criterion=gini, dt__max_depth=2.......................\n","[CV 7/10; 1/18] END dt__criterion=gini, dt__max_depth=2;, score=0.795 total time=   0.0s\n","[CV 8/10; 1/18] START dt__criterion=gini, dt__max_depth=2.......................\n","[CV 8/10; 1/18] END dt__criterion=gini, dt__max_depth=2;, score=0.772 total time=   0.0s\n","[CV 9/10; 1/18] START dt__criterion=gini, dt__max_depth=2.......................\n","[CV 9/10; 1/18] END dt__criterion=gini, dt__max_depth=2;, score=0.740 total time=   0.0s\n","[CV 10/10; 1/18] START dt__criterion=gini, dt__max_depth=2......................\n","[CV 10/10; 1/18] END dt__criterion=gini, dt__max_depth=2;, score=0.704 total time=   0.0s\n","[CV 1/10; 2/18] START dt__criterion=gini, dt__max_depth=3.......................\n","[CV 1/10; 2/18] END dt__criterion=gini, dt__max_depth=3;, score=0.481 total time=   0.0s\n","[CV 2/10; 2/18] START dt__criterion=gini, dt__max_depth=3.......................\n","[CV 2/10; 2/18] END dt__criterion=gini, dt__max_depth=3;, score=0.743 total time=   0.0s\n","[CV 3/10; 2/18] START dt__criterion=gini, dt__max_depth=3.......................\n","[CV 3/10; 2/18] END dt__criterion=gini, dt__max_depth=3;, score=0.728 total time=   0.0s\n","[CV 4/10; 2/18] START dt__criterion=gini, dt__max_depth=3.......................\n","[CV 4/10; 2/18] END dt__criterion=gini, dt__max_depth=3;, score=0.677 total time=   0.0s\n","[CV 5/10; 2/18] START dt__criterion=gini, dt__max_depth=3.......................\n","[CV 5/10; 2/18] END dt__criterion=gini, dt__max_depth=3;, score=0.609 total time=   0.0s\n","[CV 6/10; 2/18] START dt__criterion=gini, dt__max_depth=3.......................\n","[CV 6/10; 2/18] END dt__criterion=gini, dt__max_depth=3;, score=0.742 total time=   0.0s\n","[CV 7/10; 2/18] START dt__criterion=gini, dt__max_depth=3.......................\n","[CV 7/10; 2/18] END dt__criterion=gini, dt__max_depth=3;, score=0.825 total time=   0.0s\n","[CV 8/10; 2/18] START dt__criterion=gini, dt__max_depth=3.......................\n","[CV 8/10; 2/18] END dt__criterion=gini, dt__max_depth=3;, score=0.769 total time=   0.0s\n","[CV 9/10; 2/18] START dt__criterion=gini, dt__max_depth=3.......................\n","[CV 9/10; 2/18] END dt__criterion=gini, dt__max_depth=3;, score=0.716 total time=   0.0s\n","[CV 10/10; 2/18] START dt__criterion=gini, dt__max_depth=3......................\n","[CV 10/10; 2/18] END dt__criterion=gini, dt__max_depth=3;, score=0.749 total time=   0.0s\n","[CV 1/10; 3/18] START dt__criterion=gini, dt__max_depth=4.......................\n","[CV 1/10; 3/18] END dt__criterion=gini, dt__max_depth=4;, score=0.607 total time=   0.0s\n","[CV 2/10; 3/18] START dt__criterion=gini, dt__max_depth=4.......................\n","[CV 2/10; 3/18] END dt__criterion=gini, dt__max_depth=4;, score=0.727 total time=   0.0s\n","[CV 3/10; 3/18] START dt__criterion=gini, dt__max_depth=4.......................\n","[CV 3/10; 3/18] END dt__criterion=gini, dt__max_depth=4;, score=0.747 total time=   0.0s\n","[CV 4/10; 3/18] START dt__criterion=gini, dt__max_depth=4.......................\n","[CV 4/10; 3/18] END dt__criterion=gini, dt__max_depth=4;, score=0.667 total time=   0.0s\n","[CV 5/10; 3/18] START dt__criterion=gini, dt__max_depth=4.......................\n","[CV 5/10; 3/18] END dt__criterion=gini, dt__max_depth=4;, score=0.638 total time=   0.0s\n","[CV 6/10; 3/18] START dt__criterion=gini, dt__max_depth=4.......................\n","[CV 6/10; 3/18] END dt__criterion=gini, dt__max_depth=4;, score=0.742 total time=   0.0s\n","[CV 7/10; 3/18] START dt__criterion=gini, dt__max_depth=4.......................\n","[CV 7/10; 3/18] END dt__criterion=gini, dt__max_depth=4;, score=0.760 total time=   0.0s\n","[CV 8/10; 3/18] START dt__criterion=gini, dt__max_depth=4.......................\n","[CV 8/10; 3/18] END dt__criterion=gini, dt__max_depth=4;, score=0.761 total time=   0.0s\n","[CV 9/10; 3/18] START dt__criterion=gini, dt__max_depth=4.......................\n","[CV 9/10; 3/18] END dt__criterion=gini, dt__max_depth=4;, score=0.753 total time=   0.0s\n","[CV 10/10; 3/18] START dt__criterion=gini, dt__max_depth=4......................\n","[CV 10/10; 3/18] END dt__criterion=gini, dt__max_depth=4;, score=0.754 total time=   0.0s\n","[CV 1/10; 4/18] START dt__criterion=gini, dt__max_depth=5.......................\n","[CV 1/10; 4/18] END dt__criterion=gini, dt__max_depth=5;, score=0.639 total time=   0.0s\n","[CV 2/10; 4/18] START dt__criterion=gini, dt__max_depth=5.......................\n","[CV 2/10; 4/18] END dt__criterion=gini, dt__max_depth=5;, score=0.727 total time=   0.0s\n","[CV 3/10; 4/18] START dt__criterion=gini, dt__max_depth=5.......................\n","[CV 3/10; 4/18] END dt__criterion=gini, dt__max_depth=5;, score=0.728 total time=   0.0s\n","[CV 4/10; 4/18] START dt__criterion=gini, dt__max_depth=5.......................\n","[CV 4/10; 4/18] END dt__criterion=gini, dt__max_depth=5;, score=0.686 total time=   0.0s\n","[CV 5/10; 4/18] START dt__criterion=gini, dt__max_depth=5.......................\n","[CV 5/10; 4/18] END dt__criterion=gini, dt__max_depth=5;, score=0.619 total time=   0.0s\n","[CV 6/10; 4/18] START dt__criterion=gini, dt__max_depth=5.......................\n","[CV 6/10; 4/18] END dt__criterion=gini, dt__max_depth=5;, score=0.747 total time=   0.0s\n","[CV 7/10; 4/18] START dt__criterion=gini, dt__max_depth=5.......................\n","[CV 7/10; 4/18] END dt__criterion=gini, dt__max_depth=5;, score=0.777 total time=   0.0s\n","[CV 8/10; 4/18] START dt__criterion=gini, dt__max_depth=5.......................\n","[CV 8/10; 4/18] END dt__criterion=gini, dt__max_depth=5;, score=0.584 total time=   0.0s\n","[CV 9/10; 4/18] START dt__criterion=gini, dt__max_depth=5.......................\n","[CV 9/10; 4/18] END dt__criterion=gini, dt__max_depth=5;, score=0.766 total time=   0.0s\n","[CV 10/10; 4/18] START dt__criterion=gini, dt__max_depth=5......................\n","[CV 10/10; 4/18] END dt__criterion=gini, dt__max_depth=5;, score=0.725 total time=   0.0s\n","[CV 1/10; 5/18] START dt__criterion=gini, dt__max_depth=6.......................\n","[CV 1/10; 5/18] END dt__criterion=gini, dt__max_depth=6;, score=0.648 total time=   0.0s\n","[CV 2/10; 5/18] START dt__criterion=gini, dt__max_depth=6.......................\n","[CV 2/10; 5/18] END dt__criterion=gini, dt__max_depth=6;, score=0.709 total time=   0.0s\n","[CV 3/10; 5/18] START dt__criterion=gini, dt__max_depth=6.......................\n","[CV 3/10; 5/18] END dt__criterion=gini, dt__max_depth=6;, score=0.728 total time=   0.0s\n","[CV 4/10; 5/18] START dt__criterion=gini, dt__max_depth=6.......................\n","[CV 4/10; 5/18] END dt__criterion=gini, dt__max_depth=6;, score=0.696 total time=   0.0s\n","[CV 5/10; 5/18] START dt__criterion=gini, dt__max_depth=6.......................\n","[CV 5/10; 5/18] END dt__criterion=gini, dt__max_depth=6;, score=0.632 total time=   0.0s\n","[CV 6/10; 5/18] START dt__criterion=gini, dt__max_depth=6.......................\n","[CV 6/10; 5/18] END dt__criterion=gini, dt__max_depth=6;, score=0.806 total time=   0.0s\n","[CV 7/10; 5/18] START dt__criterion=gini, dt__max_depth=6.......................\n","[CV 7/10; 5/18] END dt__criterion=gini, dt__max_depth=6;, score=0.808 total time=   0.0s\n","[CV 8/10; 5/18] START dt__criterion=gini, dt__max_depth=6.......................\n","[CV 8/10; 5/18] END dt__criterion=gini, dt__max_depth=6;, score=0.595 total time=   0.0s\n","[CV 9/10; 5/18] START dt__criterion=gini, dt__max_depth=6.......................\n","[CV 9/10; 5/18] END dt__criterion=gini, dt__max_depth=6;, score=0.728 total time=   0.0s\n","[CV 10/10; 5/18] START dt__criterion=gini, dt__max_depth=6......................\n","[CV 10/10; 5/18] END dt__criterion=gini, dt__max_depth=6;, score=0.714 total time=   0.0s\n","[CV 1/10; 6/18] START dt__criterion=gini, dt__max_depth=7.......................\n","[CV 1/10; 6/18] END dt__criterion=gini, dt__max_depth=7;, score=0.629 total time=   0.0s\n","[CV 2/10; 6/18] START dt__criterion=gini, dt__max_depth=7.......................\n","[CV 2/10; 6/18] END dt__criterion=gini, dt__max_depth=7;, score=0.743 total time=   0.0s\n","[CV 3/10; 6/18] START dt__criterion=gini, dt__max_depth=7.......................\n","[CV 3/10; 6/18] END dt__criterion=gini, dt__max_depth=7;, score=0.690 total time=   0.0s\n","[CV 4/10; 6/18] START dt__criterion=gini, dt__max_depth=7.......................\n","[CV 4/10; 6/18] END dt__criterion=gini, dt__max_depth=7;, score=0.750 total time=   0.0s\n","[CV 5/10; 6/18] START dt__criterion=gini, dt__max_depth=7.......................\n","[CV 5/10; 6/18] END dt__criterion=gini, dt__max_depth=7;, score=0.595 total time=   0.0s\n","[CV 6/10; 6/18] START dt__criterion=gini, dt__max_depth=7.......................\n","[CV 6/10; 6/18] END dt__criterion=gini, dt__max_depth=7;, score=0.719 total time=   0.0s\n","[CV 7/10; 6/18] START dt__criterion=gini, dt__max_depth=7.......................\n","[CV 7/10; 6/18] END dt__criterion=gini, dt__max_depth=7;, score=0.793 total time=   0.0s\n","[CV 8/10; 6/18] START dt__criterion=gini, dt__max_depth=7.......................\n","[CV 8/10; 6/18] END dt__criterion=gini, dt__max_depth=7;, score=0.607 total time=   0.0s\n","[CV 9/10; 6/18] START dt__criterion=gini, dt__max_depth=7.......................\n","[CV 9/10; 6/18] END dt__criterion=gini, dt__max_depth=7;, score=0.690 total time=   0.0s\n","[CV 10/10; 6/18] START dt__criterion=gini, dt__max_depth=7......................\n","[CV 10/10; 6/18] END dt__criterion=gini, dt__max_depth=7;, score=0.695 total time=   0.0s\n","[CV 1/10; 7/18] START dt__criterion=gini, dt__max_depth=8.......................\n","[CV 1/10; 7/18] END dt__criterion=gini, dt__max_depth=8;, score=0.618 total time=   0.0s\n","[CV 2/10; 7/18] START dt__criterion=gini, dt__max_depth=8.......................\n","[CV 2/10; 7/18] END dt__criterion=gini, dt__max_depth=8;, score=0.725 total time=   0.0s\n","[CV 3/10; 7/18] START dt__criterion=gini, dt__max_depth=8.......................\n","[CV 3/10; 7/18] END dt__criterion=gini, dt__max_depth=8;, score=0.700 total time=   0.0s\n","[CV 4/10; 7/18] START dt__criterion=gini, dt__max_depth=8.......................\n","[CV 4/10; 7/18] END dt__criterion=gini, dt__max_depth=8;, score=0.732 total time=   0.0s\n","[CV 5/10; 7/18] START dt__criterion=gini, dt__max_depth=8.......................\n","[CV 5/10; 7/18] END dt__criterion=gini, dt__max_depth=8;, score=0.607 total time=   0.0s\n","[CV 6/10; 7/18] START dt__criterion=gini, dt__max_depth=8.......................\n","[CV 6/10; 7/18] END dt__criterion=gini, dt__max_depth=8;, score=0.639 total time=   0.0s\n","[CV 7/10; 7/18] START dt__criterion=gini, dt__max_depth=8.......................\n","[CV 7/10; 7/18] END dt__criterion=gini, dt__max_depth=8;, score=0.852 total time=   0.0s\n","[CV 8/10; 7/18] START dt__criterion=gini, dt__max_depth=8.......................\n","[CV 8/10; 7/18] END dt__criterion=gini, dt__max_depth=8;, score=0.622 total time=   0.0s\n","[CV 9/10; 7/18] START dt__criterion=gini, dt__max_depth=8.......................\n","[CV 9/10; 7/18] END dt__criterion=gini, dt__max_depth=8;, score=0.580 total time=   0.0s\n","[CV 10/10; 7/18] START dt__criterion=gini, dt__max_depth=8......................\n","[CV 10/10; 7/18] END dt__criterion=gini, dt__max_depth=8;, score=0.768 total time=   0.0s\n","[CV 1/10; 8/18] START dt__criterion=gini, dt__max_depth=9.......................\n","[CV 1/10; 8/18] END dt__criterion=gini, dt__max_depth=9;, score=0.609 total time=   0.0s\n","[CV 2/10; 8/18] START dt__criterion=gini, dt__max_depth=9.......................\n","[CV 2/10; 8/18] END dt__criterion=gini, dt__max_depth=9;, score=0.713 total time=   0.0s\n","[CV 3/10; 8/18] START dt__criterion=gini, dt__max_depth=9.......................\n","[CV 3/10; 8/18] END dt__criterion=gini, dt__max_depth=9;, score=0.800 total time=   0.0s\n","[CV 4/10; 8/18] START dt__criterion=gini, dt__max_depth=9.......................\n","[CV 4/10; 8/18] END dt__criterion=gini, dt__max_depth=9;, score=0.741 total time=   0.0s\n","[CV 5/10; 8/18] START dt__criterion=gini, dt__max_depth=9.......................\n","[CV 5/10; 8/18] END dt__criterion=gini, dt__max_depth=9;, score=0.650 total time=   0.0s\n","[CV 6/10; 8/18] START dt__criterion=gini, dt__max_depth=9.......................\n","[CV 6/10; 8/18] END dt__criterion=gini, dt__max_depth=9;, score=0.696 total time=   0.0s\n","[CV 7/10; 8/18] START dt__criterion=gini, dt__max_depth=9.......................\n","[CV 7/10; 8/18] END dt__criterion=gini, dt__max_depth=9;, score=0.800 total time=   0.0s\n","[CV 8/10; 8/18] START dt__criterion=gini, dt__max_depth=9.......................\n","[CV 8/10; 8/18] END dt__criterion=gini, dt__max_depth=9;, score=0.529 total time=   0.0s\n","[CV 9/10; 8/18] START dt__criterion=gini, dt__max_depth=9.......................\n","[CV 9/10; 8/18] END dt__criterion=gini, dt__max_depth=9;, score=0.598 total time=   0.0s\n","[CV 10/10; 8/18] START dt__criterion=gini, dt__max_depth=9......................\n","[CV 10/10; 8/18] END dt__criterion=gini, dt__max_depth=9;, score=0.771 total time=   0.0s\n","[CV 1/10; 9/18] START dt__criterion=gini, dt__max_depth=10......................\n","[CV 1/10; 9/18] END dt__criterion=gini, dt__max_depth=10;, score=0.648 total time=   0.0s\n","[CV 2/10; 9/18] START dt__criterion=gini, dt__max_depth=10......................\n","[CV 2/10; 9/18] END dt__criterion=gini, dt__max_depth=10;, score=0.725 total time=   0.0s\n","[CV 3/10; 9/18] START dt__criterion=gini, dt__max_depth=10......................\n","[CV 3/10; 9/18] END dt__criterion=gini, dt__max_depth=10;, score=0.778 total time=   0.0s\n","[CV 4/10; 9/18] START dt__criterion=gini, dt__max_depth=10......................\n","[CV 4/10; 9/18] END dt__criterion=gini, dt__max_depth=10;, score=0.750 total time=   0.0s\n","[CV 5/10; 9/18] START dt__criterion=gini, dt__max_depth=10......................\n","[CV 5/10; 9/18] END dt__criterion=gini, dt__max_depth=10;, score=0.608 total time=   0.0s\n","[CV 6/10; 9/18] START dt__criterion=gini, dt__max_depth=10......................\n","[CV 6/10; 9/18] END dt__criterion=gini, dt__max_depth=10;, score=0.677 total time=   0.1s\n","[CV 7/10; 9/18] START dt__criterion=gini, dt__max_depth=10......................\n","[CV 7/10; 9/18] END dt__criterion=gini, dt__max_depth=10;, score=0.761 total time=   0.0s\n","[CV 8/10; 9/18] START dt__criterion=gini, dt__max_depth=10......................\n","[CV 8/10; 9/18] END dt__criterion=gini, dt__max_depth=10;, score=0.686 total time=   0.0s\n","[CV 9/10; 9/18] START dt__criterion=gini, dt__max_depth=10......................\n","[CV 9/10; 9/18] END dt__criterion=gini, dt__max_depth=10;, score=0.648 total time=   0.0s\n","[CV 10/10; 9/18] START dt__criterion=gini, dt__max_depth=10.....................\n","[CV 10/10; 9/18] END dt__criterion=gini, dt__max_depth=10;, score=0.723 total time=   0.0s\n","[CV 1/10; 10/18] START dt__criterion=entropy, dt__max_depth=2...................\n","[CV 1/10; 10/18] END dt__criterion=entropy, dt__max_depth=2;, score=0.709 total time=   0.1s\n","[CV 2/10; 10/18] START dt__criterion=entropy, dt__max_depth=2...................\n","[CV 2/10; 10/18] END dt__criterion=entropy, dt__max_depth=2;, score=0.709 total time=   0.1s\n","[CV 3/10; 10/18] START dt__criterion=entropy, dt__max_depth=2...................\n","[CV 3/10; 10/18] END dt__criterion=entropy, dt__max_depth=2;, score=0.663 total time=   0.1s\n","[CV 4/10; 10/18] START dt__criterion=entropy, dt__max_depth=2...................\n","[CV 4/10; 10/18] END dt__criterion=entropy, dt__max_depth=2;, score=0.658 total time=   0.0s\n","[CV 5/10; 10/18] START dt__criterion=entropy, dt__max_depth=2...................\n","[CV 5/10; 10/18] END dt__criterion=entropy, dt__max_depth=2;, score=0.733 total time=   0.0s\n","[CV 6/10; 10/18] START dt__criterion=entropy, dt__max_depth=2...................\n","[CV 6/10; 10/18] END dt__criterion=entropy, dt__max_depth=2;, score=0.745 total time=   0.0s\n","[CV 7/10; 10/18] START dt__criterion=entropy, dt__max_depth=2...................\n","[CV 7/10; 10/18] END dt__criterion=entropy, dt__max_depth=2;, score=0.490 total time=   0.0s\n","[CV 8/10; 10/18] START dt__criterion=entropy, dt__max_depth=2...................\n","[CV 8/10; 10/18] END dt__criterion=entropy, dt__max_depth=2;, score=0.772 total time=   0.0s\n","[CV 9/10; 10/18] START dt__criterion=entropy, dt__max_depth=2...................\n","[CV 9/10; 10/18] END dt__criterion=entropy, dt__max_depth=2;, score=0.740 total time=   0.0s\n","[CV 10/10; 10/18] START dt__criterion=entropy, dt__max_depth=2..................\n","[CV 10/10; 10/18] END dt__criterion=entropy, dt__max_depth=2;, score=0.704 total time=   0.0s\n","[CV 1/10; 11/18] START dt__criterion=entropy, dt__max_depth=3...................\n","[CV 1/10; 11/18] END dt__criterion=entropy, dt__max_depth=3;, score=0.481 total time=   0.0s\n","[CV 2/10; 11/18] START dt__criterion=entropy, dt__max_depth=3...................\n","[CV 2/10; 11/18] END dt__criterion=entropy, dt__max_depth=3;, score=0.727 total time=   0.0s\n","[CV 3/10; 11/18] START dt__criterion=entropy, dt__max_depth=3...................\n","[CV 3/10; 11/18] END dt__criterion=entropy, dt__max_depth=3;, score=0.669 total time=   0.0s\n","[CV 4/10; 11/18] START dt__criterion=entropy, dt__max_depth=3...................\n","[CV 4/10; 11/18] END dt__criterion=entropy, dt__max_depth=3;, score=0.677 total time=   0.0s\n","[CV 5/10; 11/18] START dt__criterion=entropy, dt__max_depth=3...................\n","[CV 5/10; 11/18] END dt__criterion=entropy, dt__max_depth=3;, score=0.575 total time=   0.0s\n","[CV 6/10; 11/18] START dt__criterion=entropy, dt__max_depth=3...................\n","[CV 6/10; 11/18] END dt__criterion=entropy, dt__max_depth=3;, score=0.742 total time=   0.0s\n","[CV 7/10; 11/18] START dt__criterion=entropy, dt__max_depth=3...................\n","[CV 7/10; 11/18] END dt__criterion=entropy, dt__max_depth=3;, score=0.756 total time=   0.0s\n","[CV 8/10; 11/18] START dt__criterion=entropy, dt__max_depth=3...................\n","[CV 8/10; 11/18] END dt__criterion=entropy, dt__max_depth=3;, score=0.769 total time=   0.0s\n","[CV 9/10; 11/18] START dt__criterion=entropy, dt__max_depth=3...................\n","[CV 9/10; 11/18] END dt__criterion=entropy, dt__max_depth=3;, score=0.723 total time=   0.0s\n","[CV 10/10; 11/18] START dt__criterion=entropy, dt__max_depth=3..................\n","[CV 10/10; 11/18] END dt__criterion=entropy, dt__max_depth=3;, score=0.750 total time=   0.0s\n","[CV 1/10; 12/18] START dt__criterion=entropy, dt__max_depth=4...................\n","[CV 1/10; 12/18] END dt__criterion=entropy, dt__max_depth=4;, score=0.481 total time=   0.0s\n","[CV 2/10; 12/18] START dt__criterion=entropy, dt__max_depth=4...................\n","[CV 2/10; 12/18] END dt__criterion=entropy, dt__max_depth=4;, score=0.707 total time=   0.0s\n","[CV 3/10; 12/18] START dt__criterion=entropy, dt__max_depth=4...................\n","[CV 3/10; 12/18] END dt__criterion=entropy, dt__max_depth=4;, score=0.728 total time=   0.0s\n","[CV 4/10; 12/18] START dt__criterion=entropy, dt__max_depth=4...................\n","[CV 4/10; 12/18] END dt__criterion=entropy, dt__max_depth=4;, score=0.657 total time=   0.0s\n","[CV 5/10; 12/18] START dt__criterion=entropy, dt__max_depth=4...................\n","[CV 5/10; 12/18] END dt__criterion=entropy, dt__max_depth=4;, score=0.580 total time=   0.0s\n","[CV 6/10; 12/18] START dt__criterion=entropy, dt__max_depth=4...................\n","[CV 6/10; 12/18] END dt__criterion=entropy, dt__max_depth=4;, score=0.733 total time=   0.0s\n","[CV 7/10; 12/18] START dt__criterion=entropy, dt__max_depth=4...................\n","[CV 7/10; 12/18] END dt__criterion=entropy, dt__max_depth=4;, score=0.743 total time=   0.0s\n","[CV 8/10; 12/18] START dt__criterion=entropy, dt__max_depth=4...................\n","[CV 8/10; 12/18] END dt__criterion=entropy, dt__max_depth=4;, score=0.761 total time=   0.0s\n","[CV 9/10; 12/18] START dt__criterion=entropy, dt__max_depth=4...................\n","[CV 9/10; 12/18] END dt__criterion=entropy, dt__max_depth=4;, score=0.737 total time=   0.0s\n","[CV 10/10; 12/18] START dt__criterion=entropy, dt__max_depth=4..................\n","[CV 10/10; 12/18] END dt__criterion=entropy, dt__max_depth=4;, score=0.762 total time=   0.0s\n","[CV 1/10; 13/18] START dt__criterion=entropy, dt__max_depth=5...................\n","[CV 1/10; 13/18] END dt__criterion=entropy, dt__max_depth=5;, score=0.586 total time=   0.0s\n","[CV 2/10; 13/18] START dt__criterion=entropy, dt__max_depth=5...................\n","[CV 2/10; 13/18] END dt__criterion=entropy, dt__max_depth=5;, score=0.700 total time=   0.0s\n","[CV 3/10; 13/18] START dt__criterion=entropy, dt__max_depth=5...................\n","[CV 3/10; 13/18] END dt__criterion=entropy, dt__max_depth=5;, score=0.686 total time=   0.0s\n","[CV 4/10; 13/18] START dt__criterion=entropy, dt__max_depth=5...................\n","[CV 4/10; 13/18] END dt__criterion=entropy, dt__max_depth=5;, score=0.657 total time=   0.0s\n","[CV 5/10; 13/18] START dt__criterion=entropy, dt__max_depth=5...................\n","[CV 5/10; 13/18] END dt__criterion=entropy, dt__max_depth=5;, score=0.580 total time=   0.0s\n","[CV 6/10; 13/18] START dt__criterion=entropy, dt__max_depth=5...................\n","[CV 6/10; 13/18] END dt__criterion=entropy, dt__max_depth=5;, score=0.747 total time=   0.0s\n","[CV 7/10; 13/18] START dt__criterion=entropy, dt__max_depth=5...................\n","[CV 7/10; 13/18] END dt__criterion=entropy, dt__max_depth=5;, score=0.722 total time=   0.0s\n","[CV 8/10; 13/18] START dt__criterion=entropy, dt__max_depth=5...................\n","[CV 8/10; 13/18] END dt__criterion=entropy, dt__max_depth=5;, score=0.619 total time=   0.0s\n","[CV 9/10; 13/18] START dt__criterion=entropy, dt__max_depth=5...................\n","[CV 9/10; 13/18] END dt__criterion=entropy, dt__max_depth=5;, score=0.737 total time=   0.0s\n","[CV 10/10; 13/18] START dt__criterion=entropy, dt__max_depth=5..................\n","[CV 10/10; 13/18] END dt__criterion=entropy, dt__max_depth=5;, score=0.762 total time=   0.0s\n","[CV 1/10; 14/18] START dt__criterion=entropy, dt__max_depth=6...................\n","[CV 1/10; 14/18] END dt__criterion=entropy, dt__max_depth=6;, score=0.623 total time=   0.0s\n","[CV 2/10; 14/18] START dt__criterion=entropy, dt__max_depth=6...................\n","[CV 2/10; 14/18] END dt__criterion=entropy, dt__max_depth=6;, score=0.688 total time=   0.0s\n","[CV 3/10; 14/18] START dt__criterion=entropy, dt__max_depth=6...................\n","[CV 3/10; 14/18] END dt__criterion=entropy, dt__max_depth=6;, score=0.669 total time=   0.0s\n","[CV 4/10; 14/18] START dt__criterion=entropy, dt__max_depth=6...................\n","[CV 4/10; 14/18] END dt__criterion=entropy, dt__max_depth=6;, score=0.686 total time=   0.0s\n","[CV 5/10; 14/18] START dt__criterion=entropy, dt__max_depth=6...................\n","[CV 5/10; 14/18] END dt__criterion=entropy, dt__max_depth=6;, score=0.568 total time=   0.0s\n","[CV 6/10; 14/18] START dt__criterion=entropy, dt__max_depth=6...................\n","[CV 6/10; 14/18] END dt__criterion=entropy, dt__max_depth=6;, score=0.743 total time=   0.0s\n","[CV 7/10; 14/18] START dt__criterion=entropy, dt__max_depth=6...................\n","[CV 7/10; 14/18] END dt__criterion=entropy, dt__max_depth=6;, score=0.713 total time=   0.0s\n","[CV 8/10; 14/18] START dt__criterion=entropy, dt__max_depth=6...................\n","[CV 8/10; 14/18] END dt__criterion=entropy, dt__max_depth=6;, score=0.647 total time=   0.0s\n","[CV 9/10; 14/18] START dt__criterion=entropy, dt__max_depth=6...................\n","[CV 9/10; 14/18] END dt__criterion=entropy, dt__max_depth=6;, score=0.705 total time=   0.0s\n","[CV 10/10; 14/18] START dt__criterion=entropy, dt__max_depth=6..................\n","[CV 10/10; 14/18] END dt__criterion=entropy, dt__max_depth=6;, score=0.707 total time=   0.0s\n","[CV 1/10; 15/18] START dt__criterion=entropy, dt__max_depth=7...................\n","[CV 1/10; 15/18] END dt__criterion=entropy, dt__max_depth=7;, score=0.632 total time=   0.0s\n","[CV 2/10; 15/18] START dt__criterion=entropy, dt__max_depth=7...................\n","[CV 2/10; 15/18] END dt__criterion=entropy, dt__max_depth=7;, score=0.685 total time=   0.0s\n","[CV 3/10; 15/18] START dt__criterion=entropy, dt__max_depth=7...................\n","[CV 3/10; 15/18] END dt__criterion=entropy, dt__max_depth=7;, score=0.641 total time=   0.0s\n","[CV 4/10; 15/18] START dt__criterion=entropy, dt__max_depth=7...................\n","[CV 4/10; 15/18] END dt__criterion=entropy, dt__max_depth=7;, score=0.695 total time=   0.0s\n","[CV 5/10; 15/18] START dt__criterion=entropy, dt__max_depth=7...................\n","[CV 5/10; 15/18] END dt__criterion=entropy, dt__max_depth=7;, score=0.580 total time=   0.0s\n","[CV 6/10; 15/18] START dt__criterion=entropy, dt__max_depth=7...................\n","[CV 6/10; 15/18] END dt__criterion=entropy, dt__max_depth=7;, score=0.745 total time=   0.0s\n","[CV 7/10; 15/18] START dt__criterion=entropy, dt__max_depth=7...................\n","[CV 7/10; 15/18] END dt__criterion=entropy, dt__max_depth=7;, score=0.736 total time=   0.0s\n","[CV 8/10; 15/18] START dt__criterion=entropy, dt__max_depth=7...................\n","[CV 8/10; 15/18] END dt__criterion=entropy, dt__max_depth=7;, score=0.638 total time=   0.1s\n","[CV 9/10; 15/18] START dt__criterion=entropy, dt__max_depth=7...................\n","[CV 9/10; 15/18] END dt__criterion=entropy, dt__max_depth=7;, score=0.725 total time=   0.1s\n","[CV 10/10; 15/18] START dt__criterion=entropy, dt__max_depth=7..................\n","[CV 10/10; 15/18] END dt__criterion=entropy, dt__max_depth=7;, score=0.732 total time=   0.0s\n","[CV 1/10; 16/18] START dt__criterion=entropy, dt__max_depth=8...................\n","[CV 1/10; 16/18] END dt__criterion=entropy, dt__max_depth=8;, score=0.611 total time=   0.0s\n","[CV 2/10; 16/18] START dt__criterion=entropy, dt__max_depth=8...................\n","[CV 2/10; 16/18] END dt__criterion=entropy, dt__max_depth=8;, score=0.654 total time=   0.0s\n","[CV 3/10; 16/18] START dt__criterion=entropy, dt__max_depth=8...................\n","[CV 3/10; 16/18] END dt__criterion=entropy, dt__max_depth=8;, score=0.618 total time=   0.0s\n","[CV 4/10; 16/18] START dt__criterion=entropy, dt__max_depth=8...................\n","[CV 4/10; 16/18] END dt__criterion=entropy, dt__max_depth=8;, score=0.704 total time=   0.0s\n","[CV 5/10; 16/18] START dt__criterion=entropy, dt__max_depth=8...................\n","[CV 5/10; 16/18] END dt__criterion=entropy, dt__max_depth=8;, score=0.622 total time=   0.1s\n","[CV 6/10; 16/18] START dt__criterion=entropy, dt__max_depth=8...................\n","[CV 6/10; 16/18] END dt__criterion=entropy, dt__max_depth=8;, score=0.719 total time=   0.0s\n","[CV 7/10; 16/18] START dt__criterion=entropy, dt__max_depth=8...................\n","[CV 7/10; 16/18] END dt__criterion=entropy, dt__max_depth=8;, score=0.725 total time=   0.0s\n","[CV 8/10; 16/18] START dt__criterion=entropy, dt__max_depth=8...................\n","[CV 8/10; 16/18] END dt__criterion=entropy, dt__max_depth=8;, score=0.607 total time=   0.0s\n","[CV 9/10; 16/18] START dt__criterion=entropy, dt__max_depth=8...................\n","[CV 9/10; 16/18] END dt__criterion=entropy, dt__max_depth=8;, score=0.618 total time=   0.0s\n","[CV 10/10; 16/18] START dt__criterion=entropy, dt__max_depth=8..................\n","[CV 10/10; 16/18] END dt__criterion=entropy, dt__max_depth=8;, score=0.725 total time=   0.1s\n","[CV 1/10; 17/18] START dt__criterion=entropy, dt__max_depth=9...................\n","[CV 1/10; 17/18] END dt__criterion=entropy, dt__max_depth=9;, score=0.627 total time=   0.0s\n","[CV 2/10; 17/18] START dt__criterion=entropy, dt__max_depth=9...................\n","[CV 2/10; 17/18] END dt__criterion=entropy, dt__max_depth=9;, score=0.586 total time=   0.0s\n","[CV 3/10; 17/18] START dt__criterion=entropy, dt__max_depth=9...................\n","[CV 3/10; 17/18] END dt__criterion=entropy, dt__max_depth=9;, score=0.618 total time=   0.1s\n","[CV 4/10; 17/18] START dt__criterion=entropy, dt__max_depth=9...................\n","[CV 4/10; 17/18] END dt__criterion=entropy, dt__max_depth=9;, score=0.690 total time=   0.0s\n","[CV 5/10; 17/18] START dt__criterion=entropy, dt__max_depth=9...................\n","[CV 5/10; 17/18] END dt__criterion=entropy, dt__max_depth=9;, score=0.586 total time=   0.0s\n","[CV 6/10; 17/18] START dt__criterion=entropy, dt__max_depth=9...................\n","[CV 6/10; 17/18] END dt__criterion=entropy, dt__max_depth=9;, score=0.676 total time=   0.0s\n","[CV 7/10; 17/18] START dt__criterion=entropy, dt__max_depth=9...................\n","[CV 7/10; 17/18] END dt__criterion=entropy, dt__max_depth=9;, score=0.696 total time=   0.0s\n","[CV 8/10; 17/18] START dt__criterion=entropy, dt__max_depth=9...................\n","[CV 8/10; 17/18] END dt__criterion=entropy, dt__max_depth=9;, score=0.732 total time=   0.0s\n","[CV 9/10; 17/18] START dt__criterion=entropy, dt__max_depth=9...................\n","[CV 9/10; 17/18] END dt__criterion=entropy, dt__max_depth=9;, score=0.609 total time=   0.0s\n","[CV 10/10; 17/18] START dt__criterion=entropy, dt__max_depth=9..................\n","[CV 10/10; 17/18] END dt__criterion=entropy, dt__max_depth=9;, score=0.732 total time=   0.0s\n","[CV 1/10; 18/18] START dt__criterion=entropy, dt__max_depth=10..................\n","[CV 1/10; 18/18] END dt__criterion=entropy, dt__max_depth=10;, score=0.640 total time=   0.0s\n","[CV 2/10; 18/18] START dt__criterion=entropy, dt__max_depth=10..................\n","[CV 2/10; 18/18] END dt__criterion=entropy, dt__max_depth=10;, score=0.650 total time=   0.0s\n","[CV 3/10; 18/18] START dt__criterion=entropy, dt__max_depth=10..................\n","[CV 3/10; 18/18] END dt__criterion=entropy, dt__max_depth=10;, score=0.609 total time=   0.0s\n","[CV 4/10; 18/18] START dt__criterion=entropy, dt__max_depth=10..................\n","[CV 4/10; 18/18] END dt__criterion=entropy, dt__max_depth=10;, score=0.643 total time=   0.0s\n","[CV 5/10; 18/18] START dt__criterion=entropy, dt__max_depth=10..................\n","[CV 5/10; 18/18] END dt__criterion=entropy, dt__max_depth=10;, score=0.586 total time=   0.0s\n","[CV 6/10; 18/18] START dt__criterion=entropy, dt__max_depth=10..................\n","[CV 6/10; 18/18] END dt__criterion=entropy, dt__max_depth=10;, score=0.719 total time=   0.0s\n","[CV 7/10; 18/18] START dt__criterion=entropy, dt__max_depth=10..................\n","[CV 7/10; 18/18] END dt__criterion=entropy, dt__max_depth=10;, score=0.713 total time=   0.0s\n","[CV 8/10; 18/18] START dt__criterion=entropy, dt__max_depth=10..................\n","[CV 8/10; 18/18] END dt__criterion=entropy, dt__max_depth=10;, score=0.677 total time=   0.0s\n","[CV 9/10; 18/18] START dt__criterion=entropy, dt__max_depth=10..................\n","[CV 9/10; 18/18] END dt__criterion=entropy, dt__max_depth=10;, score=0.704 total time=   0.0s\n","[CV 10/10; 18/18] START dt__criterion=entropy, dt__max_depth=10.................\n","[CV 10/10; 18/18] END dt__criterion=entropy, dt__max_depth=10;, score=0.779 total time=   0.0s\n"]},{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=2, shuffle=True),\n","             error_score=0,\n","             estimator=Pipeline(steps=[('dt',\n","                                        DecisionTreeClassifier(random_state=2))]),\n","             param_grid={'dt__criterion': ['gini', 'entropy'],\n","                         'dt__max_depth': range(2, 11)},\n","             scoring='precision_weighted', verbose=10)"],"text/html":["<style>#sk-container-id-4 {color: black;background-color: white;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=2, shuffle=True),\n","             error_score=0,\n","             estimator=Pipeline(steps=[(&#x27;dt&#x27;,\n","                                        DecisionTreeClassifier(random_state=2))]),\n","             param_grid={&#x27;dt__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],\n","                         &#x27;dt__max_depth&#x27;: range(2, 11)},\n","             scoring=&#x27;precision_weighted&#x27;, verbose=10)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-10\" type=\"checkbox\" ><label for=\"sk-estimator-id-10\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=2, shuffle=True),\n","             error_score=0,\n","             estimator=Pipeline(steps=[(&#x27;dt&#x27;,\n","                                        DecisionTreeClassifier(random_state=2))]),\n","             param_grid={&#x27;dt__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],\n","                         &#x27;dt__max_depth&#x27;: range(2, 11)},\n","             scoring=&#x27;precision_weighted&#x27;, verbose=10)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-11\" type=\"checkbox\" ><label for=\"sk-estimator-id-11\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: Pipeline</label><div class=\"sk-toggleable__content\"><pre>Pipeline(steps=[(&#x27;dt&#x27;, DecisionTreeClassifier(random_state=2))])</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-12\" type=\"checkbox\" ><label for=\"sk-estimator-id-12\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier(random_state=2)</pre></div></div></div></div></div></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["# analisando a melhor combinação de parâmetros\n","grid_search.best_params_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rv_EakaREZ-I","executionInfo":{"status":"ok","timestamp":1698107727322,"user_tz":180,"elapsed":265,"user":{"displayName":"Ícaro Augusto Maccari Zelioli","userId":"02607314494482909449"}},"outputId":"30a0b65f-c274-4c26-9d56-d295a0437e60"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'dt__criterion': 'gini', 'dt__max_depth': 2}"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["# analisando o melhor desempenho médio\n","grid_search.best_score_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f0qR0REUEjMY","executionInfo":{"status":"ok","timestamp":1698107729812,"user_tz":180,"elapsed":3,"user":{"displayName":"Ícaro Augusto Maccari Zelioli","userId":"02607314494482909449"}},"outputId":"ca3c3a10-5181-4b26-da76-6a9a05108948"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7271531760016708"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["# analisando os desempenhos obtidos\n","precision_cv = []\n","for i in range(5):\n","  precision_cv.append(grid_search.cv_results_[f'split{i}_test_score'][np.where(grid_search.cv_results_['rank_test_score']==1)][0])\n","\n","precision_cv"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DHvPsKZ9ErAR","executionInfo":{"status":"ok","timestamp":1698107733205,"user_tz":180,"elapsed":272,"user":{"displayName":"Ícaro Augusto Maccari Zelioli","userId":"02607314494482909449"}},"outputId":"38a97955-1754-42ca-b688-9b491c87d2d6"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[0.7085714285714286,\n"," 0.7089285714285715,\n"," 0.6856702619414483,\n"," 0.6583333333333332,\n"," 0.7527333894028595]"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["# analisando o desempenho final\n","# realizando novas previsões\n","yhat_train = grid_search.best_estimator_.predict(x_train)\n","yhat_test = grid_search.best_estimator_.predict(x_test)\n","\n","# análise do desempenho\n","print('Desempenho - Base de Treino')\n","print(classification_report(y_train, yhat_train))\n","\n","print('Desempenho - Base de Teste')\n","print(classification_report(y_test, yhat_test))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"crul6q0CGcvN","executionInfo":{"status":"ok","timestamp":1698107736484,"user_tz":180,"elapsed":8,"user":{"displayName":"Ícaro Augusto Maccari Zelioli","userId":"02607314494482909449"}},"outputId":"d6779538-fdc4-4aa3-a50a-7959e53e8074"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stdout","text":["Desempenho - Base de Treino\n","              precision    recall  f1-score   support\n","\n","           0       0.51      0.80      0.62       210\n","           1       0.89      0.67      0.76       490\n","\n","    accuracy                           0.71       700\n","   macro avg       0.70      0.73      0.69       700\n","weighted avg       0.77      0.71      0.72       700\n","\n","Desempenho - Base de Teste\n","              precision    recall  f1-score   support\n","\n","           0       0.42      0.62      0.50        90\n","           1       0.80      0.64      0.71       210\n","\n","    accuracy                           0.63       300\n","   macro avg       0.61      0.63      0.61       300\n","weighted avg       0.69      0.63      0.65       300\n","\n"]}]},{"cell_type":"markdown","source":["E se usarmos uma métrica mais voltada aos negócios para determinar o melhor conjunto de hiperparâmetros?"],"metadata":{"id":"5BUoUKkPHH2D"}},{"cell_type":"code","source":["def customer_profit(yreal, ypred):\n","\n","  # calcula a matriz de confusão\n","  conf_matrix = confusion_matrix(yreal, ypred)\n","\n","  # extrai pontuações\n","  TP = conf_matrix[1, 1]  # Verdadeiros positivos\n","  FP = conf_matrix[0, 1]  # Falsos positivos\n","  TN = conf_matrix[0, 0]  # Verdadeiros negativos\n","  FN = conf_matrix[1, 0]  # Falsos negativos\n","\n","  # calcula custo\n","  return ((50 * TP) + (-5 * FN) + (-5 * TN) + (-150 * FP)) / yreal.shape[0]"],"metadata":{"id":"Yf-1olN6HN3h","executionInfo":{"status":"ok","timestamp":1698107830549,"user_tz":180,"elapsed":7,"user":{"displayName":"Ícaro Augusto Maccari Zelioli","userId":"02607314494482909449"}}},"execution_count":42,"outputs":[]},{"cell_type":"code","source":["# configurando um buscador de hiperparâmetros\n","grid_search_profit = GridSearchCV(\n","    estimator=pipe,\n","    param_grid=params_grid,\n","    scoring=make_scorer(customer_profit, greater_is_better=True),\n","    cv=splitter,\n","    refit=True,\n","    error_score=-10,\n","    verbose=10\n",")\n","\n","# realizando busca\n","grid_search_profit.fit(x_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"P3wCUr1jHaEl","executionInfo":{"status":"ok","timestamp":1698107948750,"user_tz":180,"elapsed":3801,"user":{"displayName":"Ícaro Augusto Maccari Zelioli","userId":"02607314494482909449"}},"outputId":"fd599203-b5a4-40dc-d769-d470d6cad5f6"},"execution_count":45,"outputs":[{"output_type":"stream","name":"stdout","text":["Fitting 10 folds for each of 18 candidates, totalling 180 fits\n","[CV 1/10; 1/18] START dt__criterion=gini, dt__max_depth=2.......................\n","[CV 1/10; 1/18] END dt__criterion=gini, dt__max_depth=2;, score=5.357 total time=   0.0s\n","[CV 2/10; 1/18] START dt__criterion=gini, dt__max_depth=2.......................\n","[CV 2/10; 1/18] END dt__criterion=gini, dt__max_depth=2;, score=1.857 total time=   0.0s\n","[CV 3/10; 1/18] START dt__criterion=gini, dt__max_depth=2.......................\n","[CV 3/10; 1/18] END dt__criterion=gini, dt__max_depth=2;, score=-1.500 total time=   0.0s\n","[CV 4/10; 1/18] START dt__criterion=gini, dt__max_depth=2.......................\n","[CV 4/10; 1/18] END dt__criterion=gini, dt__max_depth=2;, score=-1.286 total time=   0.0s\n","[CV 5/10; 1/18] START dt__criterion=gini, dt__max_depth=2.......................\n","[CV 5/10; 1/18] END dt__criterion=gini, dt__max_depth=2;, score=10.071 total time=   0.0s\n","[CV 6/10; 1/18] START dt__criterion=gini, dt__max_depth=2.......................\n","[CV 6/10; 1/18] END dt__criterion=gini, dt__max_depth=2;, score=9.286 total time=   0.0s\n","[CV 7/10; 1/18] START dt__criterion=gini, dt__max_depth=2.......................\n","[CV 7/10; 1/18] END dt__criterion=gini, dt__max_depth=2;, score=12.214 total time=   0.0s\n","[CV 8/10; 1/18] START dt__criterion=gini, dt__max_depth=2.......................\n","[CV 8/10; 1/18] END dt__criterion=gini, dt__max_depth=2;, score=11.857 total time=   0.0s\n","[CV 9/10; 1/18] START dt__criterion=gini, dt__max_depth=2.......................\n","[CV 9/10; 1/18] END dt__criterion=gini, dt__max_depth=2;, score=7.929 total time=   0.0s\n","[CV 10/10; 1/18] START dt__criterion=gini, dt__max_depth=2......................\n","[CV 10/10; 1/18] END dt__criterion=gini, dt__max_depth=2;, score=4.143 total time=   0.0s\n","[CV 1/10; 2/18] START dt__criterion=gini, dt__max_depth=3.......................\n","[CV 1/10; 2/18] END dt__criterion=gini, dt__max_depth=3;, score=-12.357 total time=   0.0s\n","[CV 2/10; 2/18] START dt__criterion=gini, dt__max_depth=3.......................\n","[CV 2/10; 2/18] END dt__criterion=gini, dt__max_depth=3;, score=4.714 total time=   0.0s\n","[CV 3/10; 2/18] START dt__criterion=gini, dt__max_depth=3.......................\n","[CV 3/10; 2/18] END dt__criterion=gini, dt__max_depth=3;, score=0.071 total time=   0.0s\n","[CV 4/10; 2/18] START dt__criterion=gini, dt__max_depth=3.......................\n","[CV 4/10; 2/18] END dt__criterion=gini, dt__max_depth=3;, score=0.786 total time=   0.0s\n","[CV 5/10; 2/18] START dt__criterion=gini, dt__max_depth=3.......................\n","[CV 5/10; 2/18] END dt__criterion=gini, dt__max_depth=3;, score=-7.714 total time=   0.0s\n","[CV 6/10; 2/18] START dt__criterion=gini, dt__max_depth=3.......................\n","[CV 6/10; 2/18] END dt__criterion=gini, dt__max_depth=3;, score=8.786 total time=   0.0s\n","[CV 7/10; 2/18] START dt__criterion=gini, dt__max_depth=3.......................\n","[CV 7/10; 2/18] END dt__criterion=gini, dt__max_depth=3;, score=15.071 total time=   0.0s\n","[CV 8/10; 2/18] START dt__criterion=gini, dt__max_depth=3.......................\n","[CV 8/10; 2/18] END dt__criterion=gini, dt__max_depth=3;, score=11.643 total time=   0.0s\n","[CV 9/10; 2/18] START dt__criterion=gini, dt__max_depth=3.......................\n","[CV 9/10; 2/18] END dt__criterion=gini, dt__max_depth=3;, score=6.143 total time=   0.0s\n","[CV 10/10; 2/18] START dt__criterion=gini, dt__max_depth=3......................\n","[CV 10/10; 2/18] END dt__criterion=gini, dt__max_depth=3;, score=7.286 total time=   0.0s\n","[CV 1/10; 3/18] START dt__criterion=gini, dt__max_depth=4.......................\n","[CV 1/10; 3/18] END dt__criterion=gini, dt__max_depth=4;, score=-6.714 total time=   0.0s\n","[CV 2/10; 3/18] START dt__criterion=gini, dt__max_depth=4.......................\n","[CV 2/10; 3/18] END dt__criterion=gini, dt__max_depth=4;, score=3.929 total time=   0.0s\n","[CV 3/10; 3/18] START dt__criterion=gini, dt__max_depth=4.......................\n","[CV 3/10; 3/18] END dt__criterion=gini, dt__max_depth=4;, score=2.143 total time=   0.0s\n","[CV 4/10; 3/18] START dt__criterion=gini, dt__max_depth=4.......................\n","[CV 4/10; 3/18] END dt__criterion=gini, dt__max_depth=4;, score=0.000 total time=   0.0s\n","[CV 5/10; 3/18] START dt__criterion=gini, dt__max_depth=4.......................\n","[CV 5/10; 3/18] END dt__criterion=gini, dt__max_depth=4;, score=-5.643 total time=   0.0s\n","[CV 6/10; 3/18] START dt__criterion=gini, dt__max_depth=4.......................\n","[CV 6/10; 3/18] END dt__criterion=gini, dt__max_depth=4;, score=8.786 total time=   0.0s\n","[CV 7/10; 3/18] START dt__criterion=gini, dt__max_depth=4.......................\n","[CV 7/10; 3/18] END dt__criterion=gini, dt__max_depth=4;, score=5.500 total time=   0.0s\n","[CV 8/10; 3/18] START dt__criterion=gini, dt__max_depth=4.......................\n","[CV 8/10; 3/18] END dt__criterion=gini, dt__max_depth=4;, score=10.857 total time=   0.0s\n","[CV 9/10; 3/18] START dt__criterion=gini, dt__max_depth=4.......................\n","[CV 9/10; 3/18] END dt__criterion=gini, dt__max_depth=4;, score=9.500 total time=   0.0s\n","[CV 10/10; 3/18] START dt__criterion=gini, dt__max_depth=4......................\n","[CV 10/10; 3/18] END dt__criterion=gini, dt__max_depth=4;, score=8.571 total time=   0.0s\n","[CV 1/10; 4/18] START dt__criterion=gini, dt__max_depth=5.......................\n","[CV 1/10; 4/18] END dt__criterion=gini, dt__max_depth=5;, score=-3.357 total time=   0.0s\n","[CV 2/10; 4/18] START dt__criterion=gini, dt__max_depth=5.......................\n","[CV 2/10; 4/18] END dt__criterion=gini, dt__max_depth=5;, score=3.929 total time=   0.0s\n","[CV 3/10; 4/18] START dt__criterion=gini, dt__max_depth=5.......................\n","[CV 3/10; 4/18] END dt__criterion=gini, dt__max_depth=5;, score=0.071 total time=   0.0s\n","[CV 4/10; 4/18] START dt__criterion=gini, dt__max_depth=5.......................\n","[CV 4/10; 4/18] END dt__criterion=gini, dt__max_depth=5;, score=2.071 total time=   0.0s\n","[CV 5/10; 4/18] START dt__criterion=gini, dt__max_depth=5.......................\n","[CV 5/10; 4/18] END dt__criterion=gini, dt__max_depth=5;, score=-5.929 total time=   0.0s\n","[CV 6/10; 4/18] START dt__criterion=gini, dt__max_depth=5.......................\n","[CV 6/10; 4/18] END dt__criterion=gini, dt__max_depth=5;, score=2.143 total time=   0.0s\n","[CV 7/10; 4/18] START dt__criterion=gini, dt__max_depth=5.......................\n","[CV 7/10; 4/18] END dt__criterion=gini, dt__max_depth=5;, score=7.571 total time=   0.0s\n","[CV 8/10; 4/18] START dt__criterion=gini, dt__max_depth=5.......................\n","[CV 8/10; 4/18] END dt__criterion=gini, dt__max_depth=5;, score=-8.786 total time=   0.0s\n","[CV 9/10; 4/18] START dt__criterion=gini, dt__max_depth=5.......................\n","[CV 9/10; 4/18] END dt__criterion=gini, dt__max_depth=5;, score=11.071 total time=   0.0s\n","[CV 10/10; 4/18] START dt__criterion=gini, dt__max_depth=5......................\n","[CV 10/10; 4/18] END dt__criterion=gini, dt__max_depth=5;, score=5.714 total time=   0.0s\n","[CV 1/10; 5/18] START dt__criterion=gini, dt__max_depth=6.......................\n","[CV 1/10; 5/18] END dt__criterion=gini, dt__max_depth=6;, score=-1.571 total time=   0.0s\n","[CV 2/10; 5/18] START dt__criterion=gini, dt__max_depth=6.......................\n","[CV 2/10; 5/18] END dt__criterion=gini, dt__max_depth=6;, score=1.857 total time=   0.0s\n","[CV 3/10; 5/18] START dt__criterion=gini, dt__max_depth=6.......................\n","[CV 3/10; 5/18] END dt__criterion=gini, dt__max_depth=6;, score=0.071 total time=   0.0s\n","[CV 4/10; 5/18] START dt__criterion=gini, dt__max_depth=6.......................\n","[CV 4/10; 5/18] END dt__criterion=gini, dt__max_depth=6;, score=2.857 total time=   0.0s\n","[CV 5/10; 5/18] START dt__criterion=gini, dt__max_depth=6.......................\n","[CV 5/10; 5/18] END dt__criterion=gini, dt__max_depth=6;, score=-5.143 total time=   0.0s\n","[CV 6/10; 5/18] START dt__criterion=gini, dt__max_depth=6.......................\n","[CV 6/10; 5/18] END dt__criterion=gini, dt__max_depth=6;, score=14.786 total time=   0.0s\n","[CV 7/10; 5/18] START dt__criterion=gini, dt__max_depth=6.......................\n","[CV 7/10; 5/18] END dt__criterion=gini, dt__max_depth=6;, score=11.714 total time=   0.0s\n","[CV 8/10; 5/18] START dt__criterion=gini, dt__max_depth=6.......................\n","[CV 8/10; 5/18] END dt__criterion=gini, dt__max_depth=6;, score=-8.000 total time=   0.0s\n","[CV 9/10; 5/18] START dt__criterion=gini, dt__max_depth=6.......................\n","[CV 9/10; 5/18] END dt__criterion=gini, dt__max_depth=6;, score=0.071 total time=   0.0s\n","[CV 10/10; 5/18] START dt__criterion=gini, dt__max_depth=6......................\n","[CV 10/10; 5/18] END dt__criterion=gini, dt__max_depth=6;, score=4.929 total time=   0.0s\n","[CV 1/10; 6/18] START dt__criterion=gini, dt__max_depth=7.......................\n","[CV 1/10; 6/18] END dt__criterion=gini, dt__max_depth=7;, score=-3.643 total time=   0.0s\n","[CV 2/10; 6/18] START dt__criterion=gini, dt__max_depth=7.......................\n","[CV 2/10; 6/18] END dt__criterion=gini, dt__max_depth=7;, score=3.429 total time=   0.0s\n","[CV 3/10; 6/18] START dt__criterion=gini, dt__max_depth=7.......................\n","[CV 3/10; 6/18] END dt__criterion=gini, dt__max_depth=7;, score=-0.214 total time=   0.0s\n","[CV 4/10; 6/18] START dt__criterion=gini, dt__max_depth=7.......................\n","[CV 4/10; 6/18] END dt__criterion=gini, dt__max_depth=7;, score=9.571 total time=   0.0s\n","[CV 5/10; 6/18] START dt__criterion=gini, dt__max_depth=7.......................\n","[CV 5/10; 6/18] END dt__criterion=gini, dt__max_depth=7;, score=-8.000 total time=   0.0s\n","[CV 6/10; 6/18] START dt__criterion=gini, dt__max_depth=7.......................\n","[CV 6/10; 6/18] END dt__criterion=gini, dt__max_depth=7;, score=4.429 total time=   0.0s\n","[CV 7/10; 6/18] START dt__criterion=gini, dt__max_depth=7.......................\n","[CV 7/10; 6/18] END dt__criterion=gini, dt__max_depth=7;, score=10.929 total time=   0.0s\n","[CV 8/10; 6/18] START dt__criterion=gini, dt__max_depth=7.......................\n","[CV 8/10; 6/18] END dt__criterion=gini, dt__max_depth=7;, score=-7.214 total time=   0.0s\n","[CV 9/10; 6/18] START dt__criterion=gini, dt__max_depth=7.......................\n","[CV 9/10; 6/18] END dt__criterion=gini, dt__max_depth=7;, score=3.571 total time=   0.0s\n","[CV 10/10; 6/18] START dt__criterion=gini, dt__max_depth=7......................\n","[CV 10/10; 6/18] END dt__criterion=gini, dt__max_depth=7;, score=3.357 total time=   0.0s\n","[CV 1/10; 7/18] START dt__criterion=gini, dt__max_depth=8.......................\n","[CV 1/10; 7/18] END dt__criterion=gini, dt__max_depth=8;, score=-4.929 total time=   0.0s\n","[CV 2/10; 7/18] START dt__criterion=gini, dt__max_depth=8.......................\n","[CV 2/10; 7/18] END dt__criterion=gini, dt__max_depth=8;, score=2.643 total time=   0.0s\n","[CV 3/10; 7/18] START dt__criterion=gini, dt__max_depth=8.......................\n","[CV 3/10; 7/18] END dt__criterion=gini, dt__max_depth=8;, score=2.357 total time=   0.0s\n","[CV 4/10; 7/18] START dt__criterion=gini, dt__max_depth=8.......................\n","[CV 4/10; 7/18] END dt__criterion=gini, dt__max_depth=8;, score=7.500 total time=   0.0s\n","[CV 5/10; 7/18] START dt__criterion=gini, dt__max_depth=8.......................\n","[CV 5/10; 7/18] END dt__criterion=gini, dt__max_depth=8;, score=-7.214 total time=   0.0s\n","[CV 6/10; 7/18] START dt__criterion=gini, dt__max_depth=8.......................\n","[CV 6/10; 7/18] END dt__criterion=gini, dt__max_depth=8;, score=-2.357 total time=   0.0s\n","[CV 7/10; 7/18] START dt__criterion=gini, dt__max_depth=8.......................\n","[CV 7/10; 7/18] END dt__criterion=gini, dt__max_depth=8;, score=19.714 total time=   0.0s\n","[CV 8/10; 7/18] START dt__criterion=gini, dt__max_depth=8.......................\n","[CV 8/10; 7/18] END dt__criterion=gini, dt__max_depth=8;, score=-6.429 total time=   0.0s\n","[CV 9/10; 7/18] START dt__criterion=gini, dt__max_depth=8.......................\n","[CV 9/10; 7/18] END dt__criterion=gini, dt__max_depth=8;, score=-8.571 total time=   0.0s\n","[CV 10/10; 7/18] START dt__criterion=gini, dt__max_depth=8......................\n","[CV 10/10; 7/18] END dt__criterion=gini, dt__max_depth=8;, score=11.143 total time=   0.0s\n","[CV 1/10; 8/18] START dt__criterion=gini, dt__max_depth=9.......................\n","[CV 1/10; 8/18] END dt__criterion=gini, dt__max_depth=9;, score=-5.714 total time=   0.0s\n","[CV 2/10; 8/18] START dt__criterion=gini, dt__max_depth=9.......................\n","[CV 2/10; 8/18] END dt__criterion=gini, dt__max_depth=9;, score=3.143 total time=   0.0s\n","[CV 3/10; 8/18] START dt__criterion=gini, dt__max_depth=9.......................\n","[CV 3/10; 8/18] END dt__criterion=gini, dt__max_depth=9;, score=13.500 total time=   0.0s\n","[CV 4/10; 8/18] START dt__criterion=gini, dt__max_depth=9.......................\n","[CV 4/10; 8/18] END dt__criterion=gini, dt__max_depth=9;, score=8.286 total time=   0.0s\n","[CV 5/10; 8/18] START dt__criterion=gini, dt__max_depth=9.......................\n","[CV 5/10; 8/18] END dt__criterion=gini, dt__max_depth=9;, score=-2.571 total time=   0.0s\n","[CV 6/10; 8/18] START dt__criterion=gini, dt__max_depth=9.......................\n","[CV 6/10; 8/18] END dt__criterion=gini, dt__max_depth=9;, score=2.857 total time=   0.0s\n","[CV 7/10; 8/18] START dt__criterion=gini, dt__max_depth=9.......................\n","[CV 7/10; 8/18] END dt__criterion=gini, dt__max_depth=9;, score=13.500 total time=   0.0s\n","[CV 8/10; 8/18] START dt__criterion=gini, dt__max_depth=9.......................\n","[CV 8/10; 8/18] END dt__criterion=gini, dt__max_depth=9;, score=-12.929 total time=   0.0s\n","[CV 9/10; 8/18] START dt__criterion=gini, dt__max_depth=9.......................\n","[CV 9/10; 8/18] END dt__criterion=gini, dt__max_depth=9;, score=-7.000 total time=   0.0s\n","[CV 10/10; 8/18] START dt__criterion=gini, dt__max_depth=9......................\n","[CV 10/10; 8/18] END dt__criterion=gini, dt__max_depth=9;, score=10.643 total time=   0.0s\n","[CV 1/10; 9/18] START dt__criterion=gini, dt__max_depth=10......................\n","[CV 1/10; 9/18] END dt__criterion=gini, dt__max_depth=10;, score=-1.571 total time=   0.0s\n","[CV 2/10; 9/18] START dt__criterion=gini, dt__max_depth=10......................\n","[CV 2/10; 9/18] END dt__criterion=gini, dt__max_depth=10;, score=2.643 total time=   0.0s\n","[CV 3/10; 9/18] START dt__criterion=gini, dt__max_depth=10......................\n","[CV 3/10; 9/18] END dt__criterion=gini, dt__max_depth=10;, score=11.929 total time=   0.0s\n","[CV 4/10; 9/18] START dt__criterion=gini, dt__max_depth=10......................\n","[CV 4/10; 9/18] END dt__criterion=gini, dt__max_depth=10;, score=9.071 total time=   0.0s\n","[CV 5/10; 9/18] START dt__criterion=gini, dt__max_depth=10......................\n","[CV 5/10; 9/18] END dt__criterion=gini, dt__max_depth=10;, score=-6.214 total time=   0.0s\n","[CV 6/10; 9/18] START dt__criterion=gini, dt__max_depth=10......................\n","[CV 6/10; 9/18] END dt__criterion=gini, dt__max_depth=10;, score=0.786 total time=   0.0s\n","[CV 7/10; 9/18] START dt__criterion=gini, dt__max_depth=10......................\n","[CV 7/10; 9/18] END dt__criterion=gini, dt__max_depth=10;, score=9.857 total time=   0.0s\n","[CV 8/10; 9/18] START dt__criterion=gini, dt__max_depth=10......................\n","[CV 8/10; 9/18] END dt__criterion=gini, dt__max_depth=10;, score=2.071 total time=   0.0s\n","[CV 9/10; 9/18] START dt__criterion=gini, dt__max_depth=10......................\n","[CV 9/10; 9/18] END dt__criterion=gini, dt__max_depth=10;, score=-2.071 total time=   0.0s\n","[CV 10/10; 9/18] START dt__criterion=gini, dt__max_depth=10.....................\n","[CV 10/10; 9/18] END dt__criterion=gini, dt__max_depth=10;, score=6.714 total time=   0.0s\n","[CV 1/10; 10/18] START dt__criterion=entropy, dt__max_depth=2...................\n","[CV 1/10; 10/18] END dt__criterion=entropy, dt__max_depth=2;, score=5.357 total time=   0.0s\n","[CV 2/10; 10/18] START dt__criterion=entropy, dt__max_depth=2...................\n","[CV 2/10; 10/18] END dt__criterion=entropy, dt__max_depth=2;, score=1.857 total time=   0.0s\n","[CV 3/10; 10/18] START dt__criterion=entropy, dt__max_depth=2...................\n","[CV 3/10; 10/18] END dt__criterion=entropy, dt__max_depth=2;, score=-3.571 total time=   0.0s\n","[CV 4/10; 10/18] START dt__criterion=entropy, dt__max_depth=2...................\n","[CV 4/10; 10/18] END dt__criterion=entropy, dt__max_depth=2;, score=-1.286 total time=   0.0s\n","[CV 5/10; 10/18] START dt__criterion=entropy, dt__max_depth=2...................\n","[CV 5/10; 10/18] END dt__criterion=entropy, dt__max_depth=2;, score=8.000 total time=   0.0s\n","[CV 6/10; 10/18] START dt__criterion=entropy, dt__max_depth=2...................\n","[CV 6/10; 10/18] END dt__criterion=entropy, dt__max_depth=2;, score=9.286 total time=   0.0s\n","[CV 7/10; 10/18] START dt__criterion=entropy, dt__max_depth=2...................\n","[CV 7/10; 10/18] END dt__criterion=entropy, dt__max_depth=2;, score=-10.000 total time=   0.0s\n","[CV 8/10; 10/18] START dt__criterion=entropy, dt__max_depth=2...................\n","[CV 8/10; 10/18] END dt__criterion=entropy, dt__max_depth=2;, score=11.857 total time=   0.0s\n","[CV 9/10; 10/18] START dt__criterion=entropy, dt__max_depth=2...................\n","[CV 9/10; 10/18] END dt__criterion=entropy, dt__max_depth=2;, score=7.929 total time=   0.0s\n","[CV 10/10; 10/18] START dt__criterion=entropy, dt__max_depth=2..................\n","[CV 10/10; 10/18] END dt__criterion=entropy, dt__max_depth=2;, score=4.143 total time=   0.0s\n","[CV 1/10; 11/18] START dt__criterion=entropy, dt__max_depth=3...................\n","[CV 1/10; 11/18] END dt__criterion=entropy, dt__max_depth=3;, score=-12.357 total time=   0.0s\n","[CV 2/10; 11/18] START dt__criterion=entropy, dt__max_depth=3...................\n","[CV 2/10; 11/18] END dt__criterion=entropy, dt__max_depth=3;, score=3.929 total time=   0.0s\n","[CV 3/10; 11/18] START dt__criterion=entropy, dt__max_depth=3...................\n","[CV 3/10; 11/18] END dt__criterion=entropy, dt__max_depth=3;, score=-2.286 total time=   0.0s\n","[CV 4/10; 11/18] START dt__criterion=entropy, dt__max_depth=3...................\n","[CV 4/10; 11/18] END dt__criterion=entropy, dt__max_depth=3;, score=0.786 total time=   0.0s\n","[CV 5/10; 11/18] START dt__criterion=entropy, dt__max_depth=3...................\n","[CV 5/10; 11/18] END dt__criterion=entropy, dt__max_depth=3;, score=-9.786 total time=   0.0s\n","[CV 6/10; 11/18] START dt__criterion=entropy, dt__max_depth=3...................\n","[CV 6/10; 11/18] END dt__criterion=entropy, dt__max_depth=3;, score=8.786 total time=   0.0s\n","[CV 7/10; 11/18] START dt__criterion=entropy, dt__max_depth=3...................\n","[CV 7/10; 11/18] END dt__criterion=entropy, dt__max_depth=3;, score=0.857 total time=   0.0s\n","[CV 8/10; 11/18] START dt__criterion=entropy, dt__max_depth=3...................\n","[CV 8/10; 11/18] END dt__criterion=entropy, dt__max_depth=3;, score=11.643 total time=   0.0s\n","[CV 9/10; 11/18] START dt__criterion=entropy, dt__max_depth=3...................\n","[CV 9/10; 11/18] END dt__criterion=entropy, dt__max_depth=3;, score=6.929 total time=   0.0s\n","[CV 10/10; 11/18] START dt__criterion=entropy, dt__max_depth=3..................\n","[CV 10/10; 11/18] END dt__criterion=entropy, dt__max_depth=3;, score=9.071 total time=   0.0s\n","[CV 1/10; 12/18] START dt__criterion=entropy, dt__max_depth=4...................\n","[CV 1/10; 12/18] END dt__criterion=entropy, dt__max_depth=4;, score=-12.357 total time=   0.0s\n","[CV 2/10; 12/18] START dt__criterion=entropy, dt__max_depth=4...................\n","[CV 2/10; 12/18] END dt__criterion=entropy, dt__max_depth=4;, score=3.643 total time=   0.0s\n","[CV 3/10; 12/18] START dt__criterion=entropy, dt__max_depth=4...................\n","[CV 3/10; 12/18] END dt__criterion=entropy, dt__max_depth=4;, score=0.071 total time=   0.0s\n","[CV 4/10; 12/18] START dt__criterion=entropy, dt__max_depth=4...................\n","[CV 4/10; 12/18] END dt__criterion=entropy, dt__max_depth=4;, score=-0.786 total time=   0.0s\n","[CV 5/10; 12/18] START dt__criterion=entropy, dt__max_depth=4...................\n","[CV 5/10; 12/18] END dt__criterion=entropy, dt__max_depth=4;, score=-9.286 total time=   0.0s\n","[CV 6/10; 12/18] START dt__criterion=entropy, dt__max_depth=4...................\n","[CV 6/10; 12/18] END dt__criterion=entropy, dt__max_depth=4;, score=8.000 total time=   0.0s\n","[CV 7/10; 12/18] START dt__criterion=entropy, dt__max_depth=4...................\n","[CV 7/10; 12/18] END dt__criterion=entropy, dt__max_depth=4;, score=4.714 total time=   0.0s\n","[CV 8/10; 12/18] START dt__criterion=entropy, dt__max_depth=4...................\n","[CV 8/10; 12/18] END dt__criterion=entropy, dt__max_depth=4;, score=10.857 total time=   0.0s\n","[CV 9/10; 12/18] START dt__criterion=entropy, dt__max_depth=4...................\n","[CV 9/10; 12/18] END dt__criterion=entropy, dt__max_depth=4;, score=8.214 total time=   0.0s\n","[CV 10/10; 12/18] START dt__criterion=entropy, dt__max_depth=4..................\n","[CV 10/10; 12/18] END dt__criterion=entropy, dt__max_depth=4;, score=8.071 total time=   0.0s\n","[CV 1/10; 13/18] START dt__criterion=entropy, dt__max_depth=5...................\n","[CV 1/10; 13/18] END dt__criterion=entropy, dt__max_depth=5;, score=-8.286 total time=   0.0s\n","[CV 2/10; 13/18] START dt__criterion=entropy, dt__max_depth=5...................\n","[CV 2/10; 13/18] END dt__criterion=entropy, dt__max_depth=5;, score=2.357 total time=   0.0s\n","[CV 3/10; 13/18] START dt__criterion=entropy, dt__max_depth=5...................\n","[CV 3/10; 13/18] END dt__criterion=entropy, dt__max_depth=5;, score=-1.500 total time=   0.0s\n","[CV 4/10; 13/18] START dt__criterion=entropy, dt__max_depth=5...................\n","[CV 4/10; 13/18] END dt__criterion=entropy, dt__max_depth=5;, score=-0.786 total time=   0.0s\n","[CV 5/10; 13/18] START dt__criterion=entropy, dt__max_depth=5...................\n","[CV 5/10; 13/18] END dt__criterion=entropy, dt__max_depth=5;, score=-9.286 total time=   0.0s\n","[CV 6/10; 13/18] START dt__criterion=entropy, dt__max_depth=5...................\n","[CV 6/10; 13/18] END dt__criterion=entropy, dt__max_depth=5;, score=2.143 total time=   0.0s\n","[CV 7/10; 13/18] START dt__criterion=entropy, dt__max_depth=5...................\n","[CV 7/10; 13/18] END dt__criterion=entropy, dt__max_depth=5;, score=6.214 total time=   0.0s\n","[CV 8/10; 13/18] START dt__criterion=entropy, dt__max_depth=5...................\n","[CV 8/10; 13/18] END dt__criterion=entropy, dt__max_depth=5;, score=-5.929 total time=   0.0s\n","[CV 9/10; 13/18] START dt__criterion=entropy, dt__max_depth=5...................\n","[CV 9/10; 13/18] END dt__criterion=entropy, dt__max_depth=5;, score=8.214 total time=   0.0s\n","[CV 10/10; 13/18] START dt__criterion=entropy, dt__max_depth=5..................\n","[CV 10/10; 13/18] END dt__criterion=entropy, dt__max_depth=5;, score=8.071 total time=   0.0s\n","[CV 1/10; 14/18] START dt__criterion=entropy, dt__max_depth=6...................\n","[CV 1/10; 14/18] END dt__criterion=entropy, dt__max_depth=6;, score=-3.214 total time=   0.0s\n","[CV 2/10; 14/18] START dt__criterion=entropy, dt__max_depth=6...................\n","[CV 2/10; 14/18] END dt__criterion=entropy, dt__max_depth=6;, score=1.571 total time=   0.0s\n","[CV 3/10; 14/18] START dt__criterion=entropy, dt__max_depth=6...................\n","[CV 3/10; 14/18] END dt__criterion=entropy, dt__max_depth=6;, score=-2.286 total time=   0.1s\n","[CV 4/10; 14/18] START dt__criterion=entropy, dt__max_depth=6...................\n","[CV 4/10; 14/18] END dt__criterion=entropy, dt__max_depth=6;, score=2.071 total time=   0.0s\n","[CV 5/10; 14/18] START dt__criterion=entropy, dt__max_depth=6...................\n","[CV 5/10; 14/18] END dt__criterion=entropy, dt__max_depth=6;, score=-10.071 total time=   0.1s\n","[CV 6/10; 14/18] START dt__criterion=entropy, dt__max_depth=6...................\n","[CV 6/10; 14/18] END dt__criterion=entropy, dt__max_depth=6;, score=3.429 total time=   0.1s\n","[CV 7/10; 14/18] START dt__criterion=entropy, dt__max_depth=6...................\n","[CV 7/10; 14/18] END dt__criterion=entropy, dt__max_depth=6;, score=3.143 total time=   0.0s\n","[CV 8/10; 14/18] START dt__criterion=entropy, dt__max_depth=6...................\n","[CV 8/10; 14/18] END dt__criterion=entropy, dt__max_depth=6;, score=-4.357 total time=   0.1s\n","[CV 9/10; 14/18] START dt__criterion=entropy, dt__max_depth=6...................\n","[CV 9/10; 14/18] END dt__criterion=entropy, dt__max_depth=6;, score=-0.714 total time=   0.0s\n","[CV 10/10; 14/18] START dt__criterion=entropy, dt__max_depth=6..................\n","[CV 10/10; 14/18] END dt__criterion=entropy, dt__max_depth=6;, score=3.643 total time=   0.0s\n","[CV 1/10; 15/18] START dt__criterion=entropy, dt__max_depth=7...................\n","[CV 1/10; 15/18] END dt__criterion=entropy, dt__max_depth=7;, score=-2.643 total time=   0.0s\n","[CV 2/10; 15/18] START dt__criterion=entropy, dt__max_depth=7...................\n","[CV 2/10; 15/18] END dt__criterion=entropy, dt__max_depth=7;, score=2.571 total time=   0.0s\n","[CV 3/10; 15/18] START dt__criterion=entropy, dt__max_depth=7...................\n","[CV 3/10; 15/18] END dt__criterion=entropy, dt__max_depth=7;, score=-3.857 total time=   0.0s\n","[CV 4/10; 15/18] START dt__criterion=entropy, dt__max_depth=7...................\n","[CV 4/10; 15/18] END dt__criterion=entropy, dt__max_depth=7;, score=3.357 total time=   0.0s\n","[CV 5/10; 15/18] START dt__criterion=entropy, dt__max_depth=7...................\n","[CV 5/10; 15/18] END dt__criterion=entropy, dt__max_depth=7;, score=-9.286 total time=   0.0s\n","[CV 6/10; 15/18] START dt__criterion=entropy, dt__max_depth=7...................\n","[CV 6/10; 15/18] END dt__criterion=entropy, dt__max_depth=7;, score=6.000 total time=   0.0s\n","[CV 7/10; 15/18] START dt__criterion=entropy, dt__max_depth=7...................\n","[CV 7/10; 15/18] END dt__criterion=entropy, dt__max_depth=7;, score=6.500 total time=   0.0s\n","[CV 8/10; 15/18] START dt__criterion=entropy, dt__max_depth=7...................\n","[CV 8/10; 15/18] END dt__criterion=entropy, dt__max_depth=7;, score=-5.643 total time=   0.0s\n","[CV 9/10; 15/18] START dt__criterion=entropy, dt__max_depth=7...................\n","[CV 9/10; 15/18] END dt__criterion=entropy, dt__max_depth=7;, score=7.214 total time=   0.0s\n","[CV 10/10; 15/18] START dt__criterion=entropy, dt__max_depth=7..................\n","[CV 10/10; 15/18] END dt__criterion=entropy, dt__max_depth=7;, score=7.000 total time=   0.0s\n","[CV 1/10; 16/18] START dt__criterion=entropy, dt__max_depth=8...................\n","[CV 1/10; 16/18] END dt__criterion=entropy, dt__max_depth=8;, score=-4.500 total time=   0.0s\n","[CV 2/10; 16/18] START dt__criterion=entropy, dt__max_depth=8...................\n","[CV 2/10; 16/18] END dt__criterion=entropy, dt__max_depth=8;, score=-3.071 total time=   0.0s\n","[CV 3/10; 16/18] START dt__criterion=entropy, dt__max_depth=8...................\n","[CV 3/10; 16/18] END dt__criterion=entropy, dt__max_depth=8;, score=-5.429 total time=   0.0s\n","[CV 4/10; 16/18] START dt__criterion=entropy, dt__max_depth=8...................\n","[CV 4/10; 16/18] END dt__criterion=entropy, dt__max_depth=8;, score=4.143 total time=   0.0s\n","[CV 5/10; 16/18] START dt__criterion=entropy, dt__max_depth=8...................\n","[CV 5/10; 16/18] END dt__criterion=entropy, dt__max_depth=8;, score=-6.429 total time=   0.0s\n","[CV 6/10; 16/18] START dt__criterion=entropy, dt__max_depth=8...................\n","[CV 6/10; 16/18] END dt__criterion=entropy, dt__max_depth=8;, score=4.429 total time=   0.0s\n","[CV 7/10; 16/18] START dt__criterion=entropy, dt__max_depth=8...................\n","[CV 7/10; 16/18] END dt__criterion=entropy, dt__max_depth=8;, score=5.714 total time=   0.0s\n","[CV 8/10; 16/18] START dt__criterion=entropy, dt__max_depth=8...................\n","[CV 8/10; 16/18] END dt__criterion=entropy, dt__max_depth=8;, score=-7.214 total time=   0.0s\n","[CV 9/10; 16/18] START dt__criterion=entropy, dt__max_depth=8...................\n","[CV 9/10; 16/18] END dt__criterion=entropy, dt__max_depth=8;, score=-4.929 total time=   0.0s\n","[CV 10/10; 16/18] START dt__criterion=entropy, dt__max_depth=8..................\n","[CV 10/10; 16/18] END dt__criterion=entropy, dt__max_depth=8;, score=5.714 total time=   0.0s\n","[CV 1/10; 17/18] START dt__criterion=entropy, dt__max_depth=9...................\n","[CV 1/10; 17/18] END dt__criterion=entropy, dt__max_depth=9;, score=-2.929 total time=   0.0s\n","[CV 2/10; 17/18] START dt__criterion=entropy, dt__max_depth=9...................\n","[CV 2/10; 17/18] END dt__criterion=entropy, dt__max_depth=9;, score=-8.286 total time=   0.0s\n","[CV 3/10; 17/18] START dt__criterion=entropy, dt__max_depth=9...................\n","[CV 3/10; 17/18] END dt__criterion=entropy, dt__max_depth=9;, score=-5.429 total time=   0.0s\n","[CV 4/10; 17/18] START dt__criterion=entropy, dt__max_depth=9...................\n","[CV 4/10; 17/18] END dt__criterion=entropy, dt__max_depth=9;, score=3.571 total time=   0.0s\n","[CV 5/10; 17/18] START dt__criterion=entropy, dt__max_depth=9...................\n","[CV 5/10; 17/18] END dt__criterion=entropy, dt__max_depth=9;, score=-8.286 total time=   0.0s\n","[CV 6/10; 17/18] START dt__criterion=entropy, dt__max_depth=9...................\n","[CV 6/10; 17/18] END dt__criterion=entropy, dt__max_depth=9;, score=1.286 total time=   0.0s\n","[CV 7/10; 17/18] START dt__criterion=entropy, dt__max_depth=9...................\n","[CV 7/10; 17/18] END dt__criterion=entropy, dt__max_depth=9;, score=2.857 total time=   0.0s\n","[CV 8/10; 17/18] START dt__criterion=entropy, dt__max_depth=9...................\n","[CV 8/10; 17/18] END dt__criterion=entropy, dt__max_depth=9;, score=7.000 total time=   0.0s\n","[CV 9/10; 17/18] START dt__criterion=entropy, dt__max_depth=9...................\n","[CV 9/10; 17/18] END dt__criterion=entropy, dt__max_depth=9;, score=-5.714 total time=   0.0s\n","[CV 10/10; 17/18] START dt__criterion=entropy, dt__max_depth=9..................\n","[CV 10/10; 17/18] END dt__criterion=entropy, dt__max_depth=9;, score=7.000 total time=   0.0s\n","[CV 1/10; 18/18] START dt__criterion=entropy, dt__max_depth=10..................\n","[CV 1/10; 18/18] END dt__criterion=entropy, dt__max_depth=10;, score=-1.857 total time=   0.0s\n","[CV 2/10; 18/18] START dt__criterion=entropy, dt__max_depth=10..................\n","[CV 2/10; 18/18] END dt__criterion=entropy, dt__max_depth=10;, score=-2.571 total time=   0.0s\n","[CV 3/10; 18/18] START dt__criterion=entropy, dt__max_depth=10..................\n","[CV 3/10; 18/18] END dt__criterion=entropy, dt__max_depth=10;, score=-5.714 total time=   0.0s\n","[CV 4/10; 18/18] START dt__criterion=entropy, dt__max_depth=10..................\n","[CV 4/10; 18/18] END dt__criterion=entropy, dt__max_depth=10;, score=-1.357 total time=   0.0s\n","[CV 5/10; 18/18] START dt__criterion=entropy, dt__max_depth=10..................\n","[CV 5/10; 18/18] END dt__criterion=entropy, dt__max_depth=10;, score=-8.286 total time=   0.0s\n","[CV 6/10; 18/18] START dt__criterion=entropy, dt__max_depth=10..................\n","[CV 6/10; 18/18] END dt__criterion=entropy, dt__max_depth=10;, score=4.429 total time=   0.0s\n","[CV 7/10; 18/18] START dt__criterion=entropy, dt__max_depth=10..................\n","[CV 7/10; 18/18] END dt__criterion=entropy, dt__max_depth=10;, score=5.429 total time=   0.0s\n","[CV 8/10; 18/18] START dt__criterion=entropy, dt__max_depth=10..................\n","[CV 8/10; 18/18] END dt__criterion=entropy, dt__max_depth=10;, score=0.786 total time=   0.0s\n","[CV 9/10; 18/18] START dt__criterion=entropy, dt__max_depth=10..................\n","[CV 9/10; 18/18] END dt__criterion=entropy, dt__max_depth=10;, score=4.643 total time=   0.0s\n","[CV 10/10; 18/18] START dt__criterion=entropy, dt__max_depth=10.................\n","[CV 10/10; 18/18] END dt__criterion=entropy, dt__max_depth=10;, score=10.143 total time=   0.0s\n"]},{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=2, shuffle=True),\n","             error_score=-10,\n","             estimator=Pipeline(steps=[('dt',\n","                                        DecisionTreeClassifier(random_state=2))]),\n","             param_grid={'dt__criterion': ['gini', 'entropy'],\n","                         'dt__max_depth': range(2, 11)},\n","             scoring=make_scorer(customer_profit), verbose=10)"],"text/html":["<style>#sk-container-id-6 {color: black;background-color: white;}#sk-container-id-6 pre{padding: 0;}#sk-container-id-6 div.sk-toggleable {background-color: white;}#sk-container-id-6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-6 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-6 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-6 div.sk-item {position: relative;z-index: 1;}#sk-container-id-6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-6 div.sk-item::before, #sk-container-id-6 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-6 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-6 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-6 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-6 div.sk-label-container {text-align: center;}#sk-container-id-6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-6 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-6\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=2, shuffle=True),\n","             error_score=-10,\n","             estimator=Pipeline(steps=[(&#x27;dt&#x27;,\n","                                        DecisionTreeClassifier(random_state=2))]),\n","             param_grid={&#x27;dt__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],\n","                         &#x27;dt__max_depth&#x27;: range(2, 11)},\n","             scoring=make_scorer(customer_profit), verbose=10)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-16\" type=\"checkbox\" ><label for=\"sk-estimator-id-16\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=2, shuffle=True),\n","             error_score=-10,\n","             estimator=Pipeline(steps=[(&#x27;dt&#x27;,\n","                                        DecisionTreeClassifier(random_state=2))]),\n","             param_grid={&#x27;dt__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],\n","                         &#x27;dt__max_depth&#x27;: range(2, 11)},\n","             scoring=make_scorer(customer_profit), verbose=10)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-17\" type=\"checkbox\" ><label for=\"sk-estimator-id-17\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: Pipeline</label><div class=\"sk-toggleable__content\"><pre>Pipeline(steps=[(&#x27;dt&#x27;, DecisionTreeClassifier(random_state=2))])</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-18\" type=\"checkbox\" ><label for=\"sk-estimator-id-18\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier(random_state=2)</pre></div></div></div></div></div></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["# analisando a melhor combinação de parâmetros\n","grid_search_profit.best_params_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bLIzyzbnHxWN","executionInfo":{"status":"ok","timestamp":1698107998913,"user_tz":180,"elapsed":3,"user":{"displayName":"Ícaro Augusto Maccari Zelioli","userId":"02607314494482909449"}},"outputId":"a676b4a9-944f-4c38-d281-2d1a536423c3"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'dt__criterion': 'gini', 'dt__max_depth': 2}"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["# analisando o melhor desempenho médio\n","grid_search_profit.best_score_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xF0PwUJLH156","executionInfo":{"status":"ok","timestamp":1698108001507,"user_tz":180,"elapsed":279,"user":{"displayName":"Ícaro Augusto Maccari Zelioli","userId":"02607314494482909449"}},"outputId":"71a3e69e-83a0-4f12-bbfe-c99d0f6b2e14"},"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5.992857142857144"]},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["# analisando os desempenhos obtidos\n","profit_cv = []\n","for i in range(5):\n","  profit_cv.append(grid_search_profit.cv_results_[f'split{i}_test_score'][np.where(grid_search_profit.cv_results_['rank_test_score']==1)][0])\n","\n","profit_cv"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xiKIkSnrH9e2","executionInfo":{"status":"ok","timestamp":1698108036141,"user_tz":180,"elapsed":8,"user":{"displayName":"Ícaro Augusto Maccari Zelioli","userId":"02607314494482909449"}},"outputId":"3946a2df-4a73-4be6-802c-083993a0c05c"},"execution_count":49,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[5.357142857142857,\n"," 1.8571428571428572,\n"," -1.5,\n"," -1.2857142857142858,\n"," 10.071428571428571]"]},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["# analisando o desempenho final\n","# realizando novas previsões\n","yhat_train = grid_search_profit.best_estimator_.predict(x_train)\n","yhat_test = grid_search_profit.best_estimator_.predict(x_test)\n","\n","# análise do desempenho\n","print('Desempenho - Base de Treino')\n","print(classification_report(y_train, yhat_train))\n","print(customer_profit(y_train, yhat_train))\n","\n","print('Desempenho - Base de Teste')\n","print(classification_report(y_test, yhat_test))\n","print(customer_profit(y_test, yhat_test))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S-C61StOIJL2","executionInfo":{"status":"ok","timestamp":1698108109715,"user_tz":180,"elapsed":383,"user":{"displayName":"Ícaro Augusto Maccari Zelioli","userId":"02607314494482909449"}},"outputId":"ab034702-a297-4a46-c1fc-e1dd63c41885"},"execution_count":51,"outputs":[{"output_type":"stream","name":"stdout","text":["Desempenho - Base de Treino\n","              precision    recall  f1-score   support\n","\n","           0       0.51      0.80      0.62       210\n","           1       0.89      0.67      0.76       490\n","\n","    accuracy                           0.71       700\n","   macro avg       0.70      0.73      0.69       700\n","weighted avg       0.77      0.71      0.72       700\n","\n","11.914285714285715\n","Desempenho - Base de Teste\n","              precision    recall  f1-score   support\n","\n","           0       0.42      0.62      0.50        90\n","           1       0.80      0.64      0.71       210\n","\n","    accuracy                           0.63       300\n","   macro avg       0.61      0.63      0.61       300\n","weighted avg       0.69      0.63      0.65       300\n","\n","3.1333333333333333\n"]}]}]}